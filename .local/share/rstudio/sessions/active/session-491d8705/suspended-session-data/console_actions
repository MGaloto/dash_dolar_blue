{
    "type": [
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        2,
        2,
        3
    ],
    "data": [
        "            title = strong(\"Dashboard sobre los tipos de cambio en Argentina\"), solidHeader = TRUE,",
        "+ ",
        "            p(\"Este Dashboard tiene la finalidad de mostrar la variación de los distintos tipos de cambio en  \", strong(\"Argentina\"), \".\"),",
        "+ ",
        "            p(\"Podemos ver las siguientes métricas:\"),",
        "+ ",
        "            tags$ol(",
        "+ ",
        "              tags$li(\"Variación interanual del tipo de cambio paralelo\"),",
        "+ ",
        "              tags$li(\"Variación diaria del tipo de cambio paralelo, mep y oficial.\"),",
        "+ ",
        "              tags$li(\"Variación diaria de las brechas cambiarias. Blue vs Mep, Mep vs Oficial y Blue vs Oficial\")",
        "+ ",
        "            ),",
        "+ ",
        "            p(\"Packages:\"),",
        "+ ",
        "            tags$ul(",
        "+ ",
        "              tags$li(tags$a(href=\"https://jkunst.com/highcharter/index.html\", \"highcharter\")),",
        "+ ",
        "              tags$li(tags$a(href=\"https://rinterface.github.io/bs4Dash/index.html\", \"bs4Dash\")),",
        "+ ",
        "              tags$li(tags$a(href=\"https://dplyr.tidyverse.org/\", \"dplyr\"))",
        "+ ",
        "            )",
        "+ ",
        "          ),",
        "+ ",
        "          box(",
        "+ ",
        "            title = strong(\"Trabajo hecho por:\"), solidHeader = TRUE,",
        "+ ",
        "            h5(\"Galoto Maximiliano\"),",
        "+ ",
        "            tags$ul(",
        "+ ",
        "              tags$li(tags$a(href=\"https://www.linkedin.com/in/maximilianogaloto\", \"Linkedin\")),",
        "+ ",
        "              tags$li(tags$a(href=\"https://github.com/MGaloto\", \"GitHub\")))",
        "+ ",
        "          )",
        "+ ",
        "        )",
        "+ ",
        "      )",
        "+ ",
        "    )",
        "+ ",
        "  )",
        "+ ",
        ")",
        "Warning messages:\n",
        "1: `bindFillRole()` only works on htmltools::tag() objects (e.g., div(), p(), etc.), not objects of type 'shiny.tag.list'.  \n",
        "2: `bindFillRole()` only works on htmltools::tag() objects (e.g., div(), p(), etc.), not objects of type 'shiny.tag.list'.  \n",
        "3: `bindFillRole()` only works on htmltools::tag() objects (e.g., div(), p(), etc.), not objects of type 'shiny.tag.list'.  \n",
        "> ",
        "",
        "> ",
        "# SV ----------------------------------------------------------------------",
        "> ",
        "server <- function(input, output,session) {",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  dolar = edit_dolar_historico(",
        "+ ",
        "    read_excel('data/dolar.xlsx') %>% ",
        "+ ",
        "      arrange(Fecha) %>% ",
        "+ ",
        "      select(Fecha,Compra,Venta,Promedio,variacion))",
        "+ ",
        "  ",
        "+ ",
        "  dolarmep= edit_dolar_historico(",
        "+ ",
        "    read_excel('data/dolarmep.xlsx') %>% ",
        "+ ",
        "      arrange(Fecha) %>% ",
        "+ ",
        "      select(Fecha,Compra,Venta,Promedio,variacion))",
        "+ ",
        "  ",
        "+ ",
        "  dolaroficial=edit_dolar_historico(",
        "+ ",
        "    read_excel('data/dolaroficial.xlsx') %>% ",
        "+ ",
        "      arrange(Fecha) %>% ",
        "+ ",
        "      select(Fecha,Compra,Venta,Promedio,variacion))",
        "+ ",
        "  ",
        "+ ",
        "  dolarmepcierre = dolarmep$Promedio[nrow(dolarmep)]",
        "+ ",
        "  dolaroficialcierre = dolaroficial$Promedio[nrow(dolaroficial)]",
        "+ ",
        "  dolarbluecierre = dolar$Promedio[nrow(dolar)]",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  mepvsoficial = merge(",
        "+ ",
        "    na.omit(dolarmep %>% mutate(prommep = Promedio) %>% select(Fecha,prommep)), ",
        "+ ",
        "    na.omit(dolaroficial %>% mutate(promoficial = Promedio) %>% select(Fecha,promoficial)), ",
        "+ ",
        "    by = \"Fecha\", ",
        "+ ",
        "    all = FALSE",
        "+ ",
        "  ) %>% mutate(",
        "+ ",
        "    brecha = round((prommep-promoficial) / promoficial,2)*100",
        "+ ",
        "  ) %>% select(Fecha, brecha) %>% arrange(Fecha)",
        "+ ",
        "  ",
        "+ ",
        "  bluevsoficial = merge(",
        "+ ",
        "    na.omit(dolar %>% mutate(promblue = Promedio) %>% select(Fecha,promblue)), ",
        "+ ",
        "    na.omit(dolaroficial %>% mutate(promoficial = Promedio) %>% select(Fecha,promoficial)), ",
        "+ ",
        "    by = \"Fecha\", ",
        "+ ",
        "    all = FALSE",
        "+ ",
        "  ) %>% mutate(",
        "+ ",
        "    brecha = round((promblue-promoficial) / promoficial,2)*100",
        "+ ",
        "  ) %>% select(Fecha, brecha) %>% arrange(Fecha)",
        "+ ",
        "  ",
        "+ ",
        "  bluevsmep = merge(",
        "+ ",
        "    na.omit(dolar %>% mutate(promblue = Promedio) %>% select(Fecha,promblue)), ",
        "+ ",
        "    na.omit(dolarmep %>% mutate(prommep = Promedio) %>% select(Fecha,prommep)), ",
        "+ ",
        "    by = \"Fecha\", ",
        "+ ",
        "    all = FALSE",
        "+ ",
        "  ) %>% mutate(",
        "+ ",
        "    brecha = round((promblue-prommep) / prommep,2)*100",
        "+ ",
        "  ) %>% select(Fecha, brecha) %>% arrange(Fecha)",
        "+ ",
        "  ",
        "+ ",
        "  info_mepvsoficial = get_icon_arrow(mepvsoficial)",
        "+ ",
        "  info_bluevsoficial = get_icon_arrow(bluevsoficial)",
        "+ ",
        "  info_bluevsmep = get_icon_arrow(bluevsmep)",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  rv <- reactiveValues()",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  observeEvent(input$variaciondias, {",
        "+ ",
        "    ",
        "+ ",
        "    rv$dias_variacion = as.numeric(input$variaciondias)",
        "+ ",
        "    rv$var_dolar_blue = get_dolar_var(dolar, rv$dias_variacion)",
        "+ ",
        "    rv$var_dolar_oficial = get_dolar_var(dolaroficial, rv$dias_variacion)",
        "+ ",
        "    rv$var_dolar_mep = get_dolar_var(dolarmep, rv$dias_variacion)",
        "+ ",
        "    ",
        "+ ",
        "  }, ignoreNULL = FALSE)",
        "+ ",
        "  ",
        "+ ",
        "  output$table_blue_output <- reactable::renderReactable({",
        "+ ",
        "    get_table(dolar)",
        "+ ",
        "    ",
        "+ ",
        "  })",
        "+ ",
        "  output$table_mep_output <- reactable::renderReactable({",
        "+ ",
        "    get_table(dolarmep)",
        "+ ",
        "    ",
        "+ ",
        "  })",
        "+ ",
        "  output$table_oficial_output <- reactable::renderReactable({",
        "+ ",
        "    get_table(dolaroficial)",
        "+ ",
        "    ",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  output$varplot <- renderHighchart({",
        "+ ",
        "    ",
        "+ ",
        "    date_from = get_date(dolar,as.Date(input$daterange3[1]))",
        "+ ",
        "    date_to = get_date(dolar,as.Date(input$daterange3[2]))",
        "+ ",
        "    ",
        "+ ",
        "    highcharter::hchart(",
        "+ ",
        "      dolar %>% ",
        "+ ",
        "        filter(Fecha >= date_from, ",
        "+ ",
        "               Fecha <= date_to) %>% ",
        "+ ",
        "        select(Fecha, variacion), ",
        "+ ",
        "      type = \"line\",  ",
        "+ ",
        "      highcharter::hcaes(x = \"Fecha\", y = \"variacion\"),",
        "+ ",
        "      color = \"#007bff\",",
        "+ ",
        "      name = \"ver\", ",
        "+ ",
        "      id = \"trend\",",
        "+ ",
        "      showInLegend = TRUE) %>%",
        "+ ",
        "      highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = \"Variacion: {point.y}%\") %>%",
        "+ ",
        "      ",
        "+ ",
        "      highcharter::hc_plotOptions(",
        "+ ",
        "        line = list(",
        "+ ",
        "          color = \"blue\",",
        "+ ",
        "          marker = list(",
        "+ ",
        "            fillColor = \"white\",",
        "+ ",
        "            lineWidth = 2,",
        "+ ",
        "            radius=1,",
        "+ ",
        "            lineColor = NULL",
        "+ ",
        "          )",
        "+ ",
        "        )",
        "+ ",
        "      ) %>%",
        "+ ",
        "      highcharter::hc_legend(enabled = FALSE) %>%",
        "+ ",
        "      highcharter::hc_xAxis(",
        "+ ",
        "        title = list(text = \"\"),",
        "+ ",
        "        gridLineWidth = 0,",
        "+ ",
        "        dateTimeLabelFormats = list(day = '%Y'),",
        "+ ",
        "        type = \"datetime\",",
        "+ ",
        "        reversed = FALSE,",
        "+ ",
        "        labels = list(",
        "+ ",
        "          style = list(color = \"black\", fontWeight = \"bold\")",
        "+ ",
        "        )",
        "+ ",
        "      ) %>%",
        "+ ",
        "      highcharter::hc_yAxis(",
        "+ ",
        "        title = list(text = \"%\",",
        "+ ",
        "                     style = list(color = \"black\", fontWeight = \"bold\")),",
        "+ ",
        "        gridLineWidth = 0,",
        "+ ",
        "        reversed = FALSE,",
        "+ ",
        "        labels = list(",
        "+ ",
        "          style = list(color = \"black\", fontWeight = \"bold\")",
        "+ ",
        "        )",
        "+ ",
        "      ) %>%",
        "+ ",
        "      ",
        "+ ",
        "      highcharter::hc_caption(",
        "+ ",
        "        text = paste0(\"Variacion del Dolar Blue\"),",
        "+ ",
        "        style = list(fontSize = '12px', fontWeight = 'bold', color = \"black\")) %>%",
        "+ ",
        "      highcharter::hc_tooltip(",
        "+ ",
        "        crosshairs = TRUE,",
        "+ ",
        "        backgroundColor = \"#F0F0F0\",",
        "+ ",
        "        shared = TRUE, ",
        "+ ",
        "        borderWidth = 5",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      hc_title(",
        "+ ",
        "        text = paste0('Dolar Blue Variacion Argentina'),",
        "+ ",
        "        style = list(fontSize = '16px', fontWeight = 'bold', color = \"black\")) ",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  output$timeserie <- renderHighchart({",
        "+ ",
        "    ",
        "+ ",
        "    highcharter::hchart(",
        "+ ",
        "      dolar %>% ",
        "+ ",
        "        filter(Fecha >= as.Date(input$daterange3[1]), Fecha <= as.Date(input$daterange3[2])) %>% ",
        "+ ",
        "        select(Fecha, Promedio), ",
        "+ ",
        "      type = \"line\",  ",
        "+ ",
        "      highcharter::hcaes(x = \"Fecha\", y = \"Promedio\"),",
        "+ ",
        "      color = \"#007bff\",",
        "+ ",
        "      name = \"ver\", ",
        "+ ",
        "      id = \"trend\",",
        "+ ",
        "      showInLegend = TRUE) %>%",
        "+ ",
        "      highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = \"Dolar Blue: ${point.y}\") %>%",
        "+ ",
        "      ",
        "+ ",
        "      highcharter::hc_plotOptions(",
        "+ ",
        "        line = list(",
        "+ ",
        "          color = \"blue\",",
        "+ ",
        "          marker = list(",
        "+ ",
        "            fillColor = \"white\",",
        "+ ",
        "            lineWidth = 2,",
        "+ ",
        "            radius=1,",
        "+ ",
        "            lineColor = NULL",
        "+ ",
        "          )",
        "+ ",
        "        )",
        "+ ",
        "      ) %>%",
        "+ ",
        "      highcharter::hc_legend(enabled = FALSE) %>%",
        "+ ",
        "      highcharter::hc_xAxis(",
        "+ ",
        "        title = list(text = \"\"),",
        "+ ",
        "        gridLineWidth = 0,",
        "+ ",
        "        dateTimeLabelFormats = list(day = '%Y'),",
        "+ ",
        "        type = \"datetime\",",
        "+ ",
        "        reversed = FALSE,",
        "+ ",
        "        labels = list(",
        "+ ",
        "          style = list(color = \"black\", fontWeight = \"bold\")",
        "+ ",
        "        )",
        "+ ",
        "      ) %>%",
        "+ ",
        "      highcharter::hc_yAxis(",
        "+ ",
        "        title = list(text = \"Precio\",",
        "+ ",
        "                     style = list(color = \"black\", fontWeight = \"bold\")),",
        "+ ",
        "        gridLineWidth = 0,",
        "+ ",
        "        reversed = FALSE,",
        "+ ",
        "        labels = list(",
        "+ ",
        "          style = list(color = \"black\", fontWeight = \"bold\")",
        "+ ",
        "        )",
        "+ ",
        "      ) %>%",
        "+ ",
        "      ",
        "+ ",
        "      highcharter::hc_caption(",
        "+ ",
        "        text = paste0(\"Serie Temporal del Dolar Paralelo.\"),",
        "+ ",
        "        style = list(fontSize = '12px', fontWeight = 'bold', color = \"black\")) %>%",
        "+ ",
        "      highcharter::hc_tooltip(",
        "+ ",
        "        crosshairs = TRUE,",
        "+ ",
        "        backgroundColor = \"#F0F0F0\",",
        "+ ",
        "        shared = TRUE, ",
        "+ ",
        "        borderWidth = 5",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      hc_title(",
        "+ ",
        "        text = paste0('Dolar Paralelo Argentina'),",
        "+ ",
        "        style = list(fontSize = '16px', fontWeight = 'bold', color = \"black\")) ",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  output$barplot_mepvsoficial <- renderHighchart({",
        "+ ",
        "    ",
        "+ ",
        "    highchart() %>%",
        "+ ",
        "      hc_chart(type = \"column\") %>%",
        "+ ",
        "      hc_title(text = \"Brecha Dolar Mep vs Oficial\") %>%",
        "+ ",
        "      hc_xAxis(categories = mepvsoficial$Fecha) %>%",
        "+ ",
        "      hc_yAxis(title = list(text = \"Brecha\")) %>%",
        "+ ",
        "      hc_add_series(name = \"brecha\", ",
        "+ ",
        "                    data = mepvsoficial$brecha,",
        "+ ",
        "                    color = \"#007bff\") %>% ",
        "+ ",
        "      highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = \"Brecha: % {point.y}\") %>%",
        "+ ",
        "      highcharter::hc_legend(enabled = FALSE) %>%",
        "+ ",
        "      highcharter::hc_xAxis(",
        "+ ",
        "        title = list(text = \"\"),",
        "+ ",
        "        reversed = FALSE,",
        "+ ",
        "        labels = list(",
        "+ ",
        "          style = list(color = \"black\", fontWeight = \"bold\")",
        "+ ",
        "        )",
        "+ ",
        "      ) %>%",
        "+ ",
        "      highcharter::hc_yAxis(",
        "+ ",
        "        title = list(text = \"% Brecha\",",
        "+ ",
        "                     style = list(color = \"black\", fontWeight = \"bold\")),",
        "+ ",
        "        gridLineWidth = 0,",
        "+ ",
        "        reversed = FALSE,",
        "+ ",
        "        labels = list(",
        "+ ",
        "          style = list(color = \"black\", fontWeight = \"bold\")",
        "+ ",
        "        )",
        "+ ",
        "      ) %>%",
        "+ ",
        "      ",
        "+ ",
        "      highcharter::hc_caption(",
        "+ ",
        "        text = paste0(\"Brecha Mep vs Oficial.\"),",
        "+ ",
        "        style = list(fontSize = '12px', fontWeight = 'bold', color = \"black\")) %>%",
        "+ ",
        "      highcharter::hc_tooltip(",
        "+ ",
        "        crosshairs = TRUE,",
        "+ ",
        "        backgroundColor = \"#F0F0F0\",",
        "+ ",
        "        shared = TRUE, ",
        "+ ",
        "        borderWidth = 5",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      hc_title(",
        "+ ",
        "        text = paste0('Brecha Cambiaria.'),",
        "+ ",
        "        style = list(fontSize = '16px', fontWeight = 'bold', color = \"black\")) ",
        "+ ",
        "    ",
        "+ ",
        "    ",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  output$barplot_bluevsoficial <- renderHighchart({",
        "+ ",
        "    ",
        "+ ",
        "    highchart() %>%",
        "+ ",
        "      hc_chart(type = \"column\") %>%",
        "+ ",
        "      hc_title(text = \"Brecha Dolar Blue vs Oficial\") %>%",
        "+ ",
        "      hc_xAxis(categories = bluevsoficial$Fecha) %>%",
        "+ ",
        "      hc_yAxis(title = list(text = \"Brecha\")) %>%",
        "+ ",
        "      hc_add_series(name = \"brecha\", ",
        "+ ",
        "                    data = bluevsoficial$brecha,",
        "+ ",
        "                    color = \"#007bff\") %>% ",
        "+ ",
        "      highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = \"Brecha: % {point.y}\") %>%",
        "+ ",
        "      highcharter::hc_legend(enabled = FALSE) %>%",
        "+ ",
        "      highcharter::hc_xAxis(",
        "+ ",
        "        title = list(text = \"\"),",
        "+ ",
        "        reversed = FALSE,",
        "+ ",
        "        labels = list(",
        "+ ",
        "          style = list(color = \"black\", fontWeight = \"bold\")",
        "+ ",
        "        )",
        "+ ",
        "      ) %>%",
        "+ ",
        "      highcharter::hc_yAxis(",
        "+ ",
        "        title = list(text = \"% Brecha\",",
        "+ ",
        "                     style = list(color = \"black\", fontWeight = \"bold\")),",
        "+ ",
        "        gridLineWidth = 0,",
        "+ ",
        "        reversed = FALSE,",
        "+ ",
        "        labels = list(",
        "+ ",
        "          style = list(color = \"black\", fontWeight = \"bold\")",
        "+ ",
        "        )",
        "+ ",
        "      ) %>%",
        "+ ",
        "      ",
        "+ ",
        "      highcharter::hc_caption(",
        "+ ",
        "        text = paste0(\"Brecha Blue vs Oficial.\"),",
        "+ ",
        "        style = list(fontSize = '12px', fontWeight = 'bold', color = \"black\")) %>%",
        "+ ",
        "      highcharter::hc_tooltip(",
        "+ ",
        "        crosshairs = TRUE,",
        "+ ",
        "        backgroundColor = \"#F0F0F0\",",
        "+ ",
        "        shared = TRUE, ",
        "+ ",
        "        borderWidth = 5",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      hc_title(",
        "+ ",
        "        text = paste0('Brecha Cambiaria.'),",
        "+ ",
        "        style = list(fontSize = '16px', fontWeight = 'bold', color = \"black\")) ",
        "+ ",
        "    ",
        "+ ",
        "    ",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  output$barplot_bluevsmep <- renderHighchart({",
        "+ ",
        "    ",
        "+ ",
        "    highchart() %>%",
        "+ ",
        "      hc_chart(type = \"column\") %>%",
        "+ ",
        "      hc_title(text = \"Brecha Dolar Blue vs Mep\") %>%",
        "+ ",
        "      hc_xAxis(categories = bluevsmep$Fecha) %>%",
        "+ ",
        "      hc_yAxis(title = list(text = \"Brecha\")) %>%",
        "+ ",
        "      hc_add_series(name = \"brecha\", ",
        "+ ",
        "                    data = bluevsmep$brecha,",
        "+ ",
        "                    color = \"#007bff\") %>% ",
        "+ ",
        "      highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = \"Brecha: % {point.y}\") %>%",
        "+ ",
        "      highcharter::hc_legend(enabled = FALSE) %>%",
        "+ ",
        "      highcharter::hc_xAxis(",
        "+ ",
        "        title = list(text = \"\"),",
        "+ ",
        "        reversed = FALSE,",
        "+ ",
        "        labels = list(",
        "+ ",
        "          style = list(color = \"black\", fontWeight = \"bold\")",
        "+ ",
        "        )",
        "+ ",
        "      ) %>%",
        "+ ",
        "      highcharter::hc_yAxis(",
        "+ ",
        "        title = list(text = \"% Brecha\",",
        "+ ",
        "                     style = list(color = \"black\", fontWeight = \"bold\")),",
        "+ ",
        "        gridLineWidth = 0,",
        "+ ",
        "        reversed = FALSE,",
        "+ ",
        "        labels = list(",
        "+ ",
        "          style = list(color = \"black\", fontWeight = \"bold\")",
        "+ ",
        "        )",
        "+ ",
        "      ) %>%",
        "+ ",
        "      ",
        "+ ",
        "      highcharter::hc_caption(",
        "+ ",
        "        text = paste0(\"Brecha Blue vs Mep\"),",
        "+ ",
        "        style = list(fontSize = '12px', fontWeight = 'bold', color = \"black\")) %>%",
        "+ ",
        "      highcharter::hc_tooltip(",
        "+ ",
        "        crosshairs = TRUE,",
        "+ ",
        "        backgroundColor = \"#F0F0F0\",",
        "+ ",
        "        shared = TRUE, ",
        "+ ",
        "        borderWidth = 5",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      hc_title(",
        "+ ",
        "        text = paste0('Brecha Cambiaria.'),",
        "+ ",
        "        style = list(fontSize = '16px', fontWeight = 'bold', color = \"black\")) ",
        "+ ",
        "    ",
        "+ ",
        "    ",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  output$valuebox_1 <- renderbs4ValueBox({",
        "+ ",
        "    ",
        "+ ",
        "    bs4ValueBox(",
        "+ ",
        "      value = \"\",",
        "+ ",
        "      subtitle = HTML(",
        "+ ",
        "        \"Blue: $\", as.character(dolarbluecierre),\"<br>\",",
        "+ ",
        "        \"Mep: $\", as.character(dolarmepcierre),\"<br>\",",
        "+ ",
        "        \"Oficial: $\", as.character(dolaroficialcierre)),",
        "+ ",
        "      icon = icon(\"dollar-sign\"),",
        "+ ",
        "      color = \"teal\",",
        "+ ",
        "      width = 3,",
        "+ ",
        "      footer = div(paste0(\"Precios al \",today))",
        "+ ",
        "    )",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  output$valuebox_3 <- renderbs4ValueBox({",
        "+ ",
        "    ",
        "+ ",
        "    bs4ValueBox(",
        "+ ",
        "      value = paste0(",
        "+ ",
        "        as.character(",
        "+ ",
        "          get_dolar_interanual_input(",
        "+ ",
        "            dolar, input$daterange3[1], input$daterange3[2]",
        "+ ",
        "          )",
        "+ ",
        "        ), \" %\"),",
        "+ ",
        "      subtitle = paste0(\"Variacion % Dolar Blue\"),",
        "+ ",
        "      icon = icon(\"info\"),",
        "+ ",
        "      color = \"teal\",",
        "+ ",
        "      width = 3,",
        "+ ",
        "      footer = div(",
        "+ ",
        "        paste0(",
        "+ ",
        "          \"De: \", input$daterange3[1],",
        "+ ",
        "          \" a: \",input$daterange3[2]",
        "+ ",
        "        )  ",
        "+ ",
        "      )",
        "+ ",
        "    )",
        "+ ",
        "    ",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  output$valuebox_2 <- renderbs4ValueBox({",
        "+ ",
        "    ",
        "+ ",
        "    bs4ValueBox(",
        "+ ",
        "      value = \"\",",
        "+ ",
        "      subtitle = HTML(",
        "+ ",
        "        \"Blue: \", as.character(rv$var_dolar_blue),\" %<br>\",",
        "+ ",
        "        \"Mep: \", as.character(rv$var_dolar_mep),\" %<br>\",",
        "+ ",
        "        \"Oficial: \", as.character(rv$var_dolar_oficial),\" %\"),",
        "+ ",
        "      icon = icon(\"coins\"),",
        "+ ",
        "      color = \"teal\",",
        "+ ",
        "      width = 3,",
        "+ ",
        "      footer = div(paste0(\"Variacion % Ultimos \", as.character(rv$dias_variacion) ,\" dias\"))",
        "+ ",
        "    )",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  output$valuebox_brechas_1 <- renderbs4ValueBox({",
        "+ ",
        "    bs4ValueBox(",
        "+ ",
        "      value = paste0(",
        "+ ",
        "        as.character(",
        "+ ",
        "          bluevsmep$brecha[nrow(bluevsmep)]",
        "+ ",
        "        ), \" %\"),",
        "+ ",
        "      subtitle = paste0(\"Brecha Blue vs Mep\"),",
        "+ ",
        "      icon = icon(info_bluevsmep[2]),",
        "+ ",
        "      color = info_bluevsmep[1],",
        "+ ",
        "      width = 3,",
        "+ ",
        "      footer = div(",
        "+ ",
        "        paste0(",
        "+ ",
        "          max(bluevsmep$Fecha)",
        "+ ",
        "        )  ",
        "+ ",
        "      )",
        "+ ",
        "    )",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  output$valuebox_brechas_2 <- renderbs4ValueBox({",
        "+ ",
        "    bs4ValueBox(",
        "+ ",
        "      value = paste0(",
        "+ ",
        "        as.character(",
        "+ ",
        "          mepvsoficial$brecha[nrow(mepvsoficial)]",
        "+ ",
        "        ), \" %\"),",
        "+ ",
        "      subtitle = paste0(\"Brecha Mep vs Oficial\"),",
        "+ ",
        "      icon = icon(info_mepvsoficial[2]),",
        "+ ",
        "      color = info_mepvsoficial[1],",
        "+ ",
        "      width = 3,",
        "+ ",
        "      footer = div(",
        "+ ",
        "        paste0(",
        "+ ",
        "          max(mepvsoficial$Fecha)",
        "+ ",
        "        )  ",
        "+ ",
        "      )",
        "+ ",
        "    )",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  output$valuebox_brechas_3 <- renderbs4ValueBox({",
        "+ ",
        "    bs4ValueBox(",
        "+ ",
        "      value = paste0(",
        "+ ",
        "        as.character(",
        "+ ",
        "          bluevsoficial$brecha[nrow(bluevsoficial)]",
        "+ ",
        "        ), \" %\"),",
        "+ ",
        "      subtitle = paste0(\"Brecha Blue vs Oficial\"),",
        "+ ",
        "      icon = icon(info_bluevsoficial[2]),",
        "+ ",
        "      color = info_bluevsoficial[1],",
        "+ ",
        "      width = 3,",
        "+ ",
        "      footer = div(",
        "+ ",
        "        paste0(",
        "+ ",
        "          max(bluevsoficial$Fecha)",
        "+ ",
        "        )  ",
        "+ ",
        "      )",
        "+ ",
        "    )",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "shinyApp(ui = ui, server = server)",
        "\nListening on http://127.0.0.1:7070\n",
        "\r-\r/\r                                                                                                                              \r\r/\r                                                                                                                              \r\r-\r                                                                                                                              \r\r-\r/\r                                                                                                                              ",
        "\r\r/\r                                                                                                                              \r\r-\r                                                                                                                              \r\r-\r/\r                                                                                                                              \r\r/\r                                                                                                                              ",
        "\r\r-\r                                                                                                                              \r",
        "\n"
    ]
}