print(paste0(month, '-', year))
}
}
counter = 0
for (i in 1:length(vector_years)) {
counter = counter + 1
year = vector_years[i]
for (j in 1:length(vectror_months)) {
counter = counter + 1
month = vectror_months[j]
print(paste0(month, '-', year))
print(counter)
}
}
counter = 0
for (i in 1:length(vector_years)) {
counter = counter + 1
year = vector_years[i]
for (j in 1:length(vectror_months)) {
counter = counter + 1
month = vectror_months[j]
print(paste0(month, '-', year))
print(counter)
vector_final[counter] = paste0(month, '-', year)
}
}
vector_final
counter = 1
for (i in 1:length(vector_years)) {
counter = counter + 1
year = vector_years[i]
for (j in 1:length(vectror_months)) {
counter = counter + 1
month = vectror_months[j]
print(paste0(month, '-', year))
print(counter)
vector_final[counter] = paste0(month, '-', year)
}
}
vector_final
vector_years   = c(2020:year(today()))
vectror_months = c('enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre')
vector_final = c()
datalist = list()
datalist = vector("list", length = n)
counter = 1
for (i in 1:length(vector_years)) {
counter = counter + 1
year = vector_years[i]
for (j in 1:length(vectror_months)) {
counter = counter + 1
month = vectror_months[j]
vector_final[counter] = paste0(month, '-', year)
}
}
for (i in 1:length(vector_final)) {
print(past0('Load..', vector_final[i]))
skip_to_next <- FALSE
link = paste0('https://dolarhistorico.com/cotizacion-dolar-blue/mes/',vector_final[i])
data = as.data.frame(html_table(read_html(link)))
datalist[[i]] <- data
tryCatch(print(b), error = function(e) {skip_to_next <<- TRUE})
if(skip_to_next) { next }
}
vector_years   = c(2020:year(today()))
vectror_months = c('enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre')
vector_final = c()
datalist = list()
datalist = vector("list", length = n)
counter = 1
for (i in 1:length(vector_years)) {
counter = counter + 1
year = vector_years[i]
for (j in 1:length(vectror_months)) {
counter = counter + 1
month = vectror_months[j]
vector_final[counter] = paste0(month, '-', year)
}
}
for (i in 1:length(vector_final)) {
print(paste0('Load..', vector_final[i]))
skip_to_next <- FALSE
link = paste0('https://dolarhistorico.com/cotizacion-dolar-blue/mes/',vector_final[i])
data = as.data.frame(html_table(read_html(link)))
datalist[[i]] <- data
tryCatch(print(b), error = function(e) {skip_to_next <<- TRUE})
if(skip_to_next) { next }
}
big_data = do.call(rbind, datalist)
View(big_data)
vector_final
counter = 1
for (i in 1:length(vector_years)) {
counter = counter + 1
year = vector_years[i]
for (i in 1:length(vectror_months)) {
counter = counter + 1
month = vectror_months[i]
vector_final[counter] = paste0(month, '-', year)
}
}
vector_final
vector_years[1]
vectror_months[1]
vector_years
vector_years   = c(2020:year(today()))
vectror_months = c('enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre')
vector_final   = c()
datalist = list()
datalist = vector("list")
counter = 1
for (i in 1:length(vector_years)) {
counter = counter + 1
year = vector_years[i]
for (i in 1:length(vectror_months)) {
counter = counter + 1
month = vectror_months[i]
vector_final[counter] = paste0(month, '-', year)
}
}
vector_years[1]
vectror_months[1]
for (i in 1:length(vector_final)) {
print(paste0('Load..', vector_final[i]))
skip_to_next <- FALSE
link = paste0('https://dolarhistorico.com/cotizacion-dolar-blue/mes/',vector_final[i])
data = as.data.frame(html_table(read_html(link)))
datalist[[i]] <- data
tryCatch(print(b), error = function(e) {skip_to_next <<- TRUE})
if(skip_to_next) { next }
}
big_data = do.call(rbind, datalist)
dolar$Variación = NULL
dolar_historico = read_excel('dolar_historico.xlsx')
View(dolar_historico)
get_ts_dolar = function(years, months) {
vector_final = c()
datalist = list()
datalist = vector("list")
counter = 1
for (i in 1:length(vector_years)) {
counter = counter + 1
year = vector_years[i]
for (i in 1:length(vectror_months)) {
counter = counter + 1
month = vectror_months[i]
vector_final[counter] = paste0(month, '-', year)
}
}
for (i in 1:length(vector_final)) {
skip_to_next <- FALSE
link = paste0('https://dolarhistorico.com/cotizacion-dolar-blue/mes/',vector_final[i])
data = as.data.frame(html_table(read_html(link)))
datalist[[i]] <- data
tryCatch(print(b), error = function(e) {skip_to_next <<- TRUE})
if( skip_to_next ) { next }
}
dolar = do.call(rbind, datalist)
return(dolar)
}
vector_years   = c(2020:year(today()))
vectror_months = c('enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre')
dolar = get_ts_dolar(vector_years, vectror_months)
View(dolar)
dolar$Variación = NULL
# Importando Datos Históricos
dolar_historico = read_excel('dolar_historico.xlsx')
# Unificando Formatos
dolar_historico$Fecha = as.Date(dolar_historico$Fecha)
dolar$Compra = round(as.numeric(gsub(",", ".", dolar$Compra)),2)
dolar$Venta = round(as.numeric(gsub(",", ".", dolar$Venta)),2)
dolar$Promedio = (dolar$Compra + dolar$Venta) / 2
dolar$Fecha = as.Date(dolar$Fecha, format = "%d/%m/%Y")
# Data Final
dolar_final = bind_rows(dolar_historico, dolar)
dolar_final$variacion = round(( dolar_final$Promedio - lag(dolar_final$Promedio, 1) ) / lag(dolar_final$Promedio, 1),2)
# Guardando .csv
write.csv(dolar_final, 'dolarfinal.csv')
fig <- plot_ly()
fig <- fig %>% add_lines(y = dolar$Promedio , name = "Promedio", x=dolar$Fecha ,line = list(shape = "spline"))
fig <- fig %>% add_lines(y = ~dolar$Venta, x=~dolar$Fecha ,type = 'scatter', mode = 'lines',line = list(color = 'transparent'), fill = 'tonexty', fillcolor='rgb(192, 189, 196)',showlegend = FALSE, name = 'Precio Venta')
fig <- fig %>% add_lines(y = ~dolar$Compra, x=~dolar$Fecha ,type = 'scatter', mode = 'lines', line = list(color = 'transparent'), fill = 'tonexty', showlegend = FALSE, name = 'Precio Compra')
fig <- fig %>% layout(title = "Dolar Paralelo promedio 2020 - 2021", xaxis = list(title = 'Periodo'), yaxis = list (title = 'Tipo de Cambio'))
fig
plot_ly() %>%
add_lines(y = dolar$Promedio,
name = "Promedio",
x = dolar$Fecha,
line = list(shape = "spline")) %>%
add_lines(y = ~dolar$Venta,
x = ~dolar$Fecha,
type = 'scatter',
mode = 'lines',
line = list(color = 'transparent'),
fill = 'tonexty',
fillcolor='rgb(192, 189, 196)',
showlegend = FALSE,
name = 'Precio Venta') %>%
add_lines(y = ~dolar$Compra,
x = ~dolar$Fecha ,
type = 'scatter',
mode = 'lines',
line = list(color = 'transparent'),
fill = 'tonexty',
showlegend = FALSE,
name = 'Precio Compra') %>%
layout(title = paste0("Dolar Paralelo promedio 2020 - ",year(today())),
xaxis = list(title = 'Periodo'),
yaxis = list (title = 'Tipo de Cambio'))
plot(y=dolar$Promedio, x=dolar$Fecha,
xlab = "Periodo",
ylab = "Tipo de Cambio",
main = "Observaciones Dolar Paralelo",
type = "l",
col = "red",
cex = 0.9)
inicio_cuarentena = as.Date.character("2020/03/20")
restricciones_cambiarias = as.Date.character("2020/09/15")
abline(v = inicio_cuarentena)  # linea vertical
abline(v = restricciones_cambiarias)  # linea vertical
arrows(dolar$Fecha[90],90,inicio_cuarentena,85, col = "black")  # flecha
text(dolar$Fecha[115],90,"Inicio \n Cuarentena \n 2020/03/20", cex = 0.7) # texto
arrows(dolar$Fecha[200],119,restricciones_cambiarias,130, col = "black")  # flecha
text(dolar$Fecha[225],110,"Mayores \n restricciones \n Cambiarias \n 2020/09/15", cex = 0.7) # texto
arrows(dolar$Fecha[430],160,dolar$Fecha[440],180 , col = "black")  # flecha
text(dolar$Fecha[425],148,"Salto previo \n a las elecciones \n 2021/10/22", cex = 0.7) # texto
dolar_final$Promedio = round(dolar_final$Promedio,2)
dl = dolar_final %>%
ggplot(aes(x = Fecha, y = Promedio)) +
geom_path(aes(x = Fecha, y = Promedio), alpha = 0.7, size = 1.5, width = 1, color = '#39ad58') +
geom_point(aes(x = Fecha, y = Promedio), alpha = 1, size = 4, width = 2,color = 'grey') +
ggtitle("Regions With Most Cases") +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(limits = c(0, 200)) +
#geom_text(aes(label = paste0("Precio: $",Promedio,'\nPeriodo:',month(dolar_final$Fecha),'/',year(dolar_final$Fecha))), hjust = +1, size = 6) +
labs(title = 'Dolar Paralelo, Fecha: {frame_along}', x = 'Año', y = 'Dolar Paralelo', subtitle = "Dinamica del Dolar Paralelo",
caption = "Elaboracion propia en base a datos de Ambito.com") +
theme_bw() +
theme(legend.position = "bottom") +
transition_reveal(Fecha) +
geom_vline(xintercept=dolar_final$Fecha[4515],linetype=1,
color = "black", size=0.8) +
annotate(
geom = "curve",
x = dolar_final$Fecha[4510],
y = 82,
xend = dolar_final$Fecha[4200],
yend = 140,
curvature = 0,
size = 1,
arrow = arrow(length = unit(2, "mm"))) +
annotate(geom = "text",
size = 5,
x = dolar_final$Fecha[3950],
y = 155,
label = " Inicio de la\nCuarentena\n 20/03/2020",
hjust = "left")
dl
dolar_final$año = year(dolar_final$Fecha)
dolar_2011 = dolar_final %>% filter(año >2011)
plot_ly(dolar_2011) %>%
add_lines(x = ~Fecha, y = ~variacion,
mode = 'lines',
name = "Variacion Tipo de Cambio",
line = list(color = '#1149f2', width = 1.5)) %>%
add_lines(x = ~Fecha, y = ~sd(dolar_2011$variacion, na.rm = T)*3,
mode = 'lines',
name = "+3 Desvios Estandard",
line = list(color = 'red', width = 1.5)) %>%
add_lines(x = ~Fecha, y = ~sd(dolar_2011$variacion, na.rm = T)*-3,
mode = 'lines',
name = "-3 Desvios Estandard",
line = list(color = 'orange', width = 1.5)) %>%
layout(title = '<b>Variaciones del Tipo de Cambio desde 2011</b>',
yaxis2 = list(overlaying = "y", side = "right", title = 'Recaudacion', showgrid = FALSE ,zeroline = FALSE),
yaxis = list(side = 'left', title = '%',showgrid = FALSE, zeroline = FALSE),
xaxis = list( title = 'Año'),
legend = list(x = 1.05),
hovermode = "compare")
dolar_historico = read_excel("https//raw.github.com/MGaloto/dash_dolar_blue/blob/main/dolar_historico.xlsx")
dolar_historico = read_excel("https//raw.github.com/MGaloto/dash_dolar_blue/main/dolar_historico.xlsx")
dolar_historico = read_excel("https//raw.githubusercontent.com/MGaloto/dash_dolar_blue/main/dolar_historico.xlsx")
dolar_historico = read_excel("https//raw.githubusercontent.com/MGaloto/dash_dolar_blue/blob/main/dolar_historico.xlsx")
knitr::opts_chunk$set(echo = FALSE)
dir()
dir()
getwd()
getwd()
dir()
if ('dolarfinal' %in% dir ()){
print('ok')
}
if ('dolarfinal' %in% dir()){
print('ok')
}
dir()
if ('dolarfinal.csv' %in% dir()){
print('ok')
}
dir()
if ('dolarfinal.csv' %not in% dir()){
print('ok')
}
if (!('dolarfinal.csv' %in% dir())){
print('ok')
}
dir()
View(dolar)
dolar_final$Promedio = round(dolar_final$Promedio,2)
library(flexdashboard)
library(tidyr)
library(ggplot2)
library(readr)
library(dplyr)
library(plotly)
library(readxl)
library(rvest)
library(rsconnect)
library(viridisLite)
library(tidyverse)
library(readr)
library(crayon)
library(modeest)
library(readxl)
library(ggthemes)
library(lubridate)
library(gganimate)
library(gapminder)
library(gifski)
get_ts_dolar = function(years, months) {
vector_final = c()
datalist = list()
datalist = vector("list")
counter = 1
for (i in 1:length(vector_years)) {
counter = counter + 1
year = vector_years[i]
for (i in 1:length(vectror_months)) {
counter = counter + 1
month = vectror_months[i]
vector_final[counter] = paste0(month, '-', year)
}
}
for (i in 1:length(vector_final)) {
skip_to_next <- FALSE
link = paste0('https://dolarhistorico.com/cotizacion-dolar-blue/mes/',vector_final[i])
data = as.data.frame(rvest::html_table(read_html(link)))
datalist[[i]] <- data
tryCatch(print(b), error = function(e) {skip_to_next <<- TRUE})
if( skip_to_next ) { next }
}
dolar = do.call(rbind, datalist)
return(dolar)
}
vector_years   = c(2020:year(today()))
vectror_months = c('enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre')
dolar = get_ts_dolar(vector_years, vectror_months)
# Editando Variables
dolar$Variación = NULL
# Importando Datos Históricos
dolar_historico = read_excel('data/dolar_historico.xlsx')
# Unificando Formatos
dolar_historico$Fecha = as.Date(dolar_historico$Fecha)
dolar$Compra = round(as.numeric(gsub(",", ".", dolar$Compra)),2)
dolar$Venta = round(as.numeric(gsub(",", ".", dolar$Venta)),2)
dolar$Promedio = (dolar$Compra + dolar$Venta) / 2
dolar$Fecha = as.Date(dolar$Fecha, format = "%d/%m/%Y")
# Data Final
dolar_final = bind_rows(dolar_historico, dolar)
dolar_final$variacion = round(( dolar_final$Promedio - lag(dolar_final$Promedio, 1) ) / lag(dolar_final$Promedio, 1),2)
# Guardando .csv
#write.csv(dolar_final, 'dolarfinal.csv')
plot_ly() %>%
add_lines(y = dolar$Promedio,
name = "Promedio",
x = dolar$Fecha,
line = list(shape = "spline")) %>%
add_lines(y = ~dolar$Venta,
x = ~dolar$Fecha,
type = 'scatter',
mode = 'lines',
line = list(color = 'transparent'),
fill = 'tonexty',
fillcolor='rgb(192, 189, 196)',
showlegend = FALSE,
name = 'Precio Venta') %>%
add_lines(y = ~dolar$Compra,
x = ~dolar$Fecha ,
type = 'scatter',
mode = 'lines',
line = list(color = 'transparent'),
fill = 'tonexty',
showlegend = FALSE,
name = 'Precio Compra') %>%
layout(title = paste0("Dolar Paralelo promedio 2020 - ",year(today())),
xaxis = list(title = 'Periodo'),
yaxis = list (title = 'Tipo de Cambio'))
plot(y = dolar$Promedio,
x = dolar$Fecha,
xlab = "Periodo",
ylab = "Tipo de Cambio",
main = "Observaciones Dolar Paralelo",
type = "l",
col = "red",
cex = 0.9)
inicio_cuarentena = as.Date.character("2020/03/20")
restricciones_cambiarias = as.Date.character("2020/09/15")
abline(v = inicio_cuarentena)  # linea vertical
abline(v = restricciones_cambiarias)  # linea vertical
arrows(dolar$Fecha[90],90,inicio_cuarentena,85, col = "black")  # flecha
text(dolar$Fecha[115],90,"Inicio \n Cuarentena \n 2020/03/20", cex = 0.7) # texto
arrows(dolar$Fecha[200],119,restricciones_cambiarias,130, col = "black")  # flecha
text(dolar$Fecha[225],110,"Mayores \n restricciones \n Cambiarias \n 2020/09/15", cex = 0.7) # texto
arrows(dolar$Fecha[430],160,dolar$Fecha[440],180 , col = "black")  # flecha
text(dolar$Fecha[425],148,"Salto previo \n a las elecciones \n 2021/10/22", cex = 0.7) # texto
dolar_final$Promedio = round(dolar_final$Promedio,2)
dl = dolar_final %>%
ggplot(aes(x = Fecha, y = Promedio)) +
geom_path(aes(x = Fecha, y = Promedio), alpha = 0.7, size = 1.5, width = 1, color = '#39ad58') +
geom_point(aes(x = Fecha, y = Promedio), alpha = 1, size = 4, width = 2,color = 'grey') +
ggtitle("Regions With Most Cases") +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(limits = c(0, 200)) +
#geom_text(aes(label = paste0("Precio: $",Promedio,'\nPeriodo:',month(dolar_final$Fecha),'/',year(dolar_final$Fecha))), hjust = +1, size = 6) +
labs(title = 'Dolar Paralelo, Fecha: {frame_along}', x = 'Año', y = 'Dolar Paralelo', subtitle = "Dinamica del Dolar Paralelo",
caption = "Elaboracion propia en base a datos de Ambito.com") +
theme_bw() +
theme(legend.position = "bottom") +
transition_reveal(Fecha) +
geom_vline(xintercept=dolar_final$Fecha[4515],linetype=1,
color = "black", size=0.8) +
annotate(
geom = "curve",
x = dolar_final$Fecha[4510],
y = 82,
xend = dolar_final$Fecha[4200],
yend = 140,
curvature = 0,
size = 1,
arrow = arrow(length = unit(2, "mm"))) +
annotate(geom = "text",
size = 5,
x = dolar_final$Fecha[3950],
y = 155,
label = " Inicio de la\nCuarentena\n 20/03/2020",
hjust = "left")
dl
library(flexdashboard)
library(tidyr)
library(ggplot2)
library(readr)
library(dplyr)
library(plotly)
library(readxl)
library(rvest)
library(rsconnect)
library(viridisLite)
library(tidyverse)
library(readr)
library(crayon)
library(modeest)
library(readxl)
library(ggthemes)
library(lubridate)
library(gganimate)
library(gapminder)
library(gifski)
get_ts_dolar = function(years, months) {
vector_final = c()
datalist = list()
datalist = vector("list")
counter = 1
for (i in 1:length(vector_years)) {
counter = counter + 1
year = vector_years[i]
for (i in 1:length(vectror_months)) {
counter = counter + 1
month = vectror_months[i]
vector_final[counter] = paste0(month, '-', year)
}
}
for (i in 1:length(vector_final)) {
skip_to_next <- FALSE
link = paste0('https://dolarhistorico.com/cotizacion-dolar-blue/mes/',vector_final[i])
data = as.data.frame(rvest::html_table(read_html(link)))
datalist[[i]] <- data
tryCatch(print(b), error = function(e) {skip_to_next <<- TRUE})
if( skip_to_next ) { next }
}
dolar = do.call(rbind, datalist)
return(dolar)
}
vector_years   = c(2020:year(today()))
vectror_months = c('enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre')
dolar = get_ts_dolar(vector_years, vectror_months)
# Editando Variables
dolar$Variación = NULL
# Importando Datos Históricos
dolar_historico = read_excel('data/dolar_historico.xlsx')
# Unificando Formatos
dolar_historico$Fecha = as.Date(dolar_historico$Fecha)
dolar$Compra = round(as.numeric(gsub(",", ".", dolar$Compra)),2)
dolar$Venta = round(as.numeric(gsub(",", ".", dolar$Venta)),2)
dolar$Promedio = (dolar$Compra + dolar$Venta) / 2
dolar$Fecha = as.Date(dolar$Fecha, format = "%d/%m/%Y")
# Data Final
dolar_final = bind_rows(dolar_historico, dolar)
dolar_final$variacion = round(( dolar_final$Promedio - lag(dolar_final$Promedio, 1) ) / lag(dolar_final$Promedio, 1),2)
# Guardando .csv
#write.csv(dolar_final, 'dolarfinal.csv')
View(dolar_final)
write.csv(dolar_final, 'data/dolarfinal.csv')
