0:hc_xAxis(categories = bluevsmep$Fecha) %>%
0:hc_yAxis(title = list(text = "Brecha")) %>%
0:hc_add_series(name = "brecha",
0:data = bluevsmep$brecha,
0:color = "#007bff") %>%
0:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Brecha: % {point.y}") %>%
0:highcharter::hc_legend(enabled = FALSE) %>%
0:highcharter::hc_xAxis(
0:title = list(text = ""),
0:reversed = FALSE,
0:labels = list(
0:style = list(color = "black", fontWeight = "bold")
0:)
0:) %>%
0:highcharter::hc_yAxis(
0:title = list(text = "% Brecha",
0:style = list(color = "black", fontWeight = "bold")),
0:gridLineWidth = 0,
0:reversed = FALSE,
0:labels = list(
0:style = list(color = "black", fontWeight = "bold")
0:)
0:) %>%
0:highcharter::hc_caption(
0:text = paste0("Brecha Blue vs Mep"),
0:style = list(fontSize = '12px', fontWeight = 'bold', color = "black")) %>%
0:highcharter::hc_tooltip(
0:crosshairs = TRUE,
0:backgroundColor = "#F0F0F0",
0:shared = TRUE,
0:borderWidth = 5
0:) %>%
0:hc_title(
0:text = paste0('Brecha Cambiaria.'),
0:style = list(fontSize = '16px', fontWeight = 'bold', color = "black"))
0:})
0:# value box ----------------------------------------------------------------------
0:#
0:output$valuebox_1 <- renderbs4ValueBox({
0:bs4ValueBox(
0:value = "",
0:subtitle = HTML(
0:"Blue: $", as.character(dolarbluecierre),"<br>",
0:"Mep: $", as.character(dolarmepcierre),"<br>",
0:"Oficial: $", as.character(dolaroficialcierre)),
0:icon = icon("dollar-sign"),
0:color = "teal",
0:width = 3,
0:footer = div(paste0("Precios al ",today))
0:)
0:})
0:output$valuebox_3 <- renderbs4ValueBox({
0:bs4ValueBox(
0:value = paste0(
0:as.character(
0:get_dolar_interanual_input(
0:dolar, input$daterange3[1], input$daterange3[2]
0:)
0:), " %"),
0:subtitle = paste0("Variacion % Dolar Blue"),
0:icon = icon("info"),
0:color = "teal",
0:width = 3,
0:footer = div(
0:paste0(
0:"De: ", input$daterange3[1],
0:" a: ",input$daterange3[2]
0:)
0:)
0:)
0:})
0:output$valuebox_2 <- renderbs4ValueBox({
0:bs4ValueBox(
0:value = "",
0:subtitle = HTML(
0:"Blue: ", as.character(rv$var_dolar_blue)," %<br>",
0:"Mep: ", as.character(rv$var_dolar_mep)," %<br>",
0:"Oficial: ", as.character(rv$var_dolar_oficial)," %"),
0:icon = icon("coins"),
0:color = "teal",
0:width = 3,
0:footer = div(paste0("Variacion % Ultimos ", as.character(rv$dias_variacion) ," dias"))
0:)
0:})
0:output$valuebox_brechas_1 <- renderbs4ValueBox({
0:bs4ValueBox(
0:value = paste0(
0:as.character(
0:bluevsmep$brecha[nrow(bluevsmep)]
0:), " %"),
0:subtitle = paste0("Brecha Blue vs Mep"),
0:icon = icon(info_bluevsmep[2]),
0:color = info_bluevsmep[1],
0:width = 3,
0:footer = div(
0:paste0(
0:max(bluevsmep$Fecha)
0:)
0:)
0:)
0:})
0:output$valuebox_brechas_2 <- renderbs4ValueBox({
0:bs4ValueBox(
0:value = paste0(
0:as.character(
0:mepvsoficial$brecha[nrow(mepvsoficial)]
0:), " %"),
0:subtitle = paste0("Brecha Mep vs Oficial"),
0:icon = icon(info_mepvsoficial[2]),
0:color = info_mepvsoficial[1],
0:width = 3,
0:footer = div(
0:paste0(
0:max(mepvsoficial$Fecha)
0:)
0:)
0:)
0:})
0:output$valuebox_brechas_3 <- renderbs4ValueBox({
0:bs4ValueBox(
0:value = paste0(
0:as.character(
0:bluevsoficial$brecha[nrow(bluevsoficial)]
0:), " %"),
0:subtitle = paste0("Brecha Blue vs Oficial"),
0:icon = icon(info_bluevsoficial[2]),
0:color = info_bluevsoficial[1],
0:width = 3,
0:footer = div(
0:paste0(
0:max(bluevsoficial$Fecha)
0:)
0:)
0:)
0:})
0:output$downloadCSV <- downloadHandler(
0:filename = function() {
0:"dolar.csv"
0:},
0:content = function(file) {
0:write.csv(data, file)
0:}
0:)
0:}
0:shinyApp(ui = ui, server = server)
0:shiny::runApp()
0:library(flexdashboard)
0:library(ggplot2)
0:library(dplyr)
0:library(plotly)
0:library(rvest)
0:library(tidyverse)
0:library(readxl)
0:library(lubridate)
0:library(gganimate)
0:library(openxlsx)
0:library(dygraphs)
0:library(xts)
0:URL = 'https://dolarhistorico.com/cotizacion-dolar-blue/mes/'
0:URL_BLUE = "https://dolarhoy.com/cotizaciondolarblue"
0:URL_MEP = "https://dolarhoy.com/cotizaciondolarbolsa"
0:URL_OFICIAL = "https://dolarhoy.com/cotizaciondolaroficial"
0:today = format(with_tz(Sys.time() , tzone = "America/Argentina/Buenos_Aires"), format = "%Y-%m-%d")
0:last_update <- paste("Last update: ", today(), sep = "")
0:get_dolarhoy = function(url){
0:webpage <- read_html(url)
0:compra_node <- webpage %>%
0:html_nodes(xpath = "//div[@class='topic'][text()='Compra']/following-sibling::div[@class='value']")
0:venta_node <- webpage %>%
0:html_nodes(xpath = "//div[@class='topic'][text()='Venta']/following-sibling::div[@class='value']")
0:compra_valor <- round(as.numeric(gsub("\\$","", html_text(compra_node))),2)
0:venta_valor <- round(as.numeric(gsub("\\$","", html_text(venta_node))),2)
0:promedio <- round(((venta_valor+compra_valor)/2),2)
0:return(c("compra" = compra_valor, "venta" = venta_valor, "promedio" = promedio))
0:}
0:edit_dolar_historico = function(df){
0:return(
0:df %>% mutate(
0:Fecha = as.Date(Fecha, format = "%d/%m/%Y"),
0:Compra = as.numeric(Compra),
0:Venta = as.numeric(Venta),
0:Promedio = as.numeric(Promedio),
0:variacion = as.numeric(variacion))
0:)
0:}
0:data = edit_dolar_historico(read_excel('data/dolar.xlsx') %>% select(Fecha,Compra,Venta,Promedio,variacion)) %>% arrange(Fecha)
0:datamep = edit_dolar_historico(read_excel('data/dolarmep.xlsx') %>% select(Fecha,Compra,Venta,Promedio,variacion)) %>% arrange(Fecha)
0:dataoficial = edit_dolar_historico(read_excel('data/dolaroficial.xlsx') %>% select(Fecha,Compra,Venta,Promedio,variacion)) %>% arrange(Fecha)
0:get_ts_dolar = function(data, URL) {
0:from_year=year(max(data$Fecha))
0:from_month=month(max(data$Fecha))
0:vector_years = c(from_year:year(today()))
0:months = c('enero', 'febrero', 'marzo',
0:'abril', 'mayo', 'junio',
0:'julio', 'agosto', 'septiembre',
0:'octubre', 'noviembre', 'diciembre'
0:)
0:vector_months = months[from_month:length(months)]
0:vector_final = c()
0:datalist = list()
0:datalist = vector("list")
0:counter = 1
0:for (i in 1:length(vector_years)) {
0:counter = counter + 1
0:year = vector_years[i]
0:for (i in 1:length(vector_months)) {
0:counter = counter + 1
0:month = vector_months[i]
0:vector_final[counter] = paste0(month, '-', year)
0:}
0:}
0:for (i in 1:length(vector_final)) {
0:skip_to_next <- FALSE
0:link = paste0(
0:URL,vector_final[i])
0:data = as.data.frame(rvest::html_table(read_html(link)))
0:datalist[[i]] <- data
0:tryCatch(print(b), error = function(e) {skip_to_next <<- TRUE})
0:if( skip_to_next ) { next }
0:}
0:dolar = do.call(rbind, datalist)
0:return(
0:dolar
0:)
0:}
0:edit_dolar = function(df){
0:return(
0:data.frame(df) %>% mutate(
0:Fecha = as.Date(Fecha, format = "%d/%m/%Y"),
0:Compra = round(as.numeric(gsub(",", ".", Compra)),2),
0:Venta = round(as.numeric(gsub(",", ".", Venta)),2),
0:Promedio = ((Compra + Venta) / 2),
0:variacion = round(as.numeric(gsub(",", ".", gsub("%", "", VariaciÃ³n))),2) ) %>%
0:select(Fecha, Compra, Venta, Promedio, variacion)
0:)
0:}
0:get_tibble = function(dolarhoy, data, today){
0:return(
0:tibble(
0:Fecha = as.Date(today),
0:Compra = dolarhoy["compra"][[1]],
0:Venta = dolarhoy["venta"][[1]],
0:Promedio = dolarhoy["promedio"][[1]],
0:variacion = round(
0:((dolarhoy["promedio"][[1]]-data$Promedio[nrow(data)] ) / data$Promedio[nrow(data)]),2
0:)
0:)
0:)
0:}
0:if (today>=max(data$Fecha)){
0:if (today == max(data$Fecha)+1 | today == max(data$Fecha)){
0:dolarhoy_blue= get_dolarhoy(URL_BLUE)
0:dolar = unique(bind_rows(
0:data %>% filter(Fecha < today),
0:get_tibble(dolarhoy_blue, data, today)
0:) %>% arrange(Fecha)
0:)
0:} else {
0:dolar = unique(bind_rows(data, edit_dolar(get_ts_dolar(data, URL))) %>% arrange(Fecha))
0:}
0:write.xlsx(dolar, 'data/dolar.xlsx', rowNames = FALSE, overwrite = TRUE)
0:rm(data)
0:} else {
0:dolar <- data %>% arrange(Fecha)
0:rm(data)
0:}
0:if (today>=max(datamep$Fecha)){
0:dolarhoy_mep= get_dolarhoy(URL_MEP)
0:dolarmep = unique(bind_rows(
0:datamep %>% filter(Fecha < today),
0:get_tibble(dolarhoy_mep, datamep, today)
0:) %>% arrange(Fecha)
0:)
0:write.xlsx(dolarmep, 'data/dolarmep.xlsx', rowNames = FALSE, overwrite = TRUE)
0:rm(datamep)
0:} else {
0:dolarmep <- datamep %>% arrange(Fecha)
0:rm(datamep)
0:}
0:if (today>=max(dataoficial$Fecha)){
0:dolarhoy_oficial= get_dolarhoy(URL_OFICIAL)
0:dolaroficial = unique(bind_rows(
0:dataoficial %>% filter(Fecha < today),
0:get_tibble(dolaroficial, dataoficial, today)
0:) %>% arrange(Fecha)
0:)
0:write.xlsx(dolaroficial, 'data/dolaroficial.xlsx', rowNames = FALSE, overwrite = TRUE)
0:rm(dataoficial)
0:} else {
0:dolaroficial <- dataoficial %>% arrange(Fecha)
0:rm(dataoficial)
0:}
0:if (today>=max(dataoficial$Fecha)){
0:dolarhoy_oficial= get_dolarhoy(URL_OFICIAL)
0:dolaroficial = unique(bind_rows(
0:dataoficial %>% filter(Fecha < today),
0:get_tibble(dolarhoy_oficial, dataoficial, today)
0:) %>% arrange(Fecha)
0:)
0:write.xlsx(dolaroficial, 'data/dolaroficial.xlsx', rowNames = FALSE, overwrite = TRUE)
0:rm(dataoficial)
0:} else {
0:dolaroficial <- dataoficial %>% arrange(Fecha)
0:rm(dataoficial)
0:}
0:runApp()
0:library(flexdashboard)
0:library(ggplot2)
0:library(dplyr)
0:library(plotly)
0:library(rvest)
0:library(tidyverse)
0:library(readxl)
0:library(lubridate)
0:library(gganimate)
0:library(openxlsx)
0:library(dygraphs)
0:library(xts)
0:URL = 'https://dolarhistorico.com/cotizacion-dolar-blue/mes/'
0:URL_BLUE = "https://dolarhoy.com/cotizaciondolarblue"
0:URL_MEP = "https://dolarhoy.com/cotizaciondolarbolsa"
0:URL_OFICIAL = "https://dolarhoy.com/cotizaciondolaroficial"
0:today = format(with_tz(Sys.time() , tzone = "America/Argentina/Buenos_Aires"), format = "%Y-%m-%d")
0:last_update <- paste("Last update: ", today(), sep = "")
0:get_dolarhoy = function(url){
0:webpage <- read_html(url)
0:compra_node <- webpage %>%
0:html_nodes(xpath = "//div[@class='topic'][text()='Compra']/following-sibling::div[@class='value']")
0:venta_node <- webpage %>%
0:html_nodes(xpath = "//div[@class='topic'][text()='Venta']/following-sibling::div[@class='value']")
0:compra_valor <- round(as.numeric(gsub("\\$","", html_text(compra_node))),2)
0:venta_valor <- round(as.numeric(gsub("\\$","", html_text(venta_node))),2)
0:promedio <- round(((venta_valor+compra_valor)/2),2)
0:return(c("compra" = compra_valor, "venta" = venta_valor, "promedio" = promedio))
0:}
0:edit_dolar_historico = function(df){
0:return(
0:df %>% mutate(
0:Fecha = as.Date(Fecha, format = "%d/%m/%Y"),
0:Compra = as.numeric(Compra),
0:Venta = as.numeric(Venta),
0:Promedio = as.numeric(Promedio),
0:variacion = as.numeric(variacion))
0:)
0:}
0:data = edit_dolar_historico(read_excel('data/dolar.xlsx') %>% select(Fecha,Compra,Venta,Promedio,variacion)) %>% arrange(Fecha)
0:datamep = edit_dolar_historico(read_excel('data/dolarmep.xlsx') %>% select(Fecha,Compra,Venta,Promedio,variacion)) %>% arrange(Fecha)
0:dataoficial = edit_dolar_historico(read_excel('data/dolaroficial.xlsx') %>% select(Fecha,Compra,Venta,Promedio,variacion)) %>% arrange(Fecha)
0:get_ts_dolar = function(data, URL) {
0:from_year=year(max(data$Fecha))
0:from_month=month(max(data$Fecha))
0:vector_years = c(from_year:year(today()))
0:months = c('enero', 'febrero', 'marzo',
0:'abril', 'mayo', 'junio',
0:'julio', 'agosto', 'septiembre',
0:'octubre', 'noviembre', 'diciembre'
0:)
0:vector_months = months[from_month:length(months)]
0:vector_final = c()
0:datalist = list()
0:datalist = vector("list")
0:counter = 1
0:for (i in 1:length(vector_years)) {
0:counter = counter + 1
0:year = vector_years[i]
0:for (i in 1:length(vector_months)) {
0:counter = counter + 1
0:month = vector_months[i]
0:vector_final[counter] = paste0(month, '-', year)
0:}
0:}
0:for (i in 1:length(vector_final)) {
0:skip_to_next <- FALSE
0:link = paste0(
0:URL,vector_final[i])
0:data = as.data.frame(rvest::html_table(read_html(link)))
0:datalist[[i]] <- data
0:tryCatch(print(b), error = function(e) {skip_to_next <<- TRUE})
0:if( skip_to_next ) { next }
0:}
0:dolar = do.call(rbind, datalist)
0:return(
0:dolar
0:)
0:}
0:edit_dolar = function(df){
0:return(
0:data.frame(df) %>% mutate(
0:Fecha = as.Date(Fecha, format = "%d/%m/%Y"),
0:Compra = round(as.numeric(gsub(",", ".", Compra)),2),
0:Venta = round(as.numeric(gsub(",", ".", Venta)),2),
0:Promedio = ((Compra + Venta) / 2),
0:variacion = round(as.numeric(gsub(",", ".", gsub("%", "", VariaciÃ³n))),2) ) %>%
0:select(Fecha, Compra, Venta, Promedio, variacion)
0:)
0:}
0:get_tibble = function(dolarhoy, data, today){
0:return(
0:tibble(
0:Fecha = as.Date(today),
0:Compra = dolarhoy["compra"][[1]],
0:Venta = dolarhoy["venta"][[1]],
0:Promedio = dolarhoy["promedio"][[1]],
0:variacion = round(
0:((dolarhoy["promedio"][[1]]-data$Promedio[nrow(data)] ) / data$Promedio[nrow(data)]),2
0:)
0:)
0:)
0:}
0:if (today>=max(data$Fecha)){
0:if (today == max(data$Fecha)+1 | today == max(data$Fecha)){
0:dolarhoy_blue= get_dolarhoy(URL_BLUE)
0:dolar = unique(bind_rows(
0:data %>% filter(Fecha < today),
0:get_tibble(dolarhoy_blue, data, today)
0:) %>% arrange(Fecha)
0:)
0:} else {
0:dolar = unique(bind_rows(data, edit_dolar(get_ts_dolar(data, URL))) %>% arrange(Fecha))
0:}
0:write.xlsx(dolar, 'data/dolar.xlsx', rowNames = FALSE, overwrite = TRUE)
0:rm(data)
0:} else {
0:dolar <- data %>% arrange(Fecha)
0:rm(data)
0:}
0:if (today>=max(datamep$Fecha)){
0:dolarhoy_mep= get_dolarhoy(URL_MEP)
0:dolarmep = unique(bind_rows(
0:datamep %>% filter(Fecha < today),
0:get_tibble(dolarhoy_mep, datamep, today)
0:) %>% arrange(Fecha)
0:)
0:write.xlsx(dolarmep, 'data/dolarmep.xlsx', rowNames = FALSE, overwrite = TRUE)
0:rm(datamep)
0:} else {
0:dolarmep <- datamep %>% arrange(Fecha)
0:rm(datamep)
0:}
0:if (today>=max(dataoficial$Fecha)){
0:dolarhoy_oficial= get_dolarhoy(URL_OFICIAL)
0:dolaroficial = unique(bind_rows(
0:dataoficial %>% filter(Fecha < today),
0:get_tibble(dolarhoy_oficial, dataoficial, today)
0:) %>% arrange(Fecha)
0:)
0:write.xlsx(dolaroficial, 'data/dolaroficial.xlsx', rowNames = FALSE, overwrite = TRUE)
0:rm(dataoficial)
0:} else {
0:dolaroficial <- dataoficial %>% arrange(Fecha)
0:rm(dataoficial)
0:}
0:plot_ly() %>%
0:add_lines(y = dolar$Promedio,
0:name = "Promedio",
0:x = dolar$Fecha,
0:line = list(shape = "spline"))  %>%
0:layout(title = paste0("Dolar Paralelo promedio 2020 - ",year(today())),
0:xaxis = list(title = 'Periodo'),
0:yaxis = list (title = 'Tipo de Cambio'))
0:d=dolar %>% mutate(y = year(Fecha)) %>% filter(y == 2023) %>%  select(Fecha,Compra,Venta) %>%
0:as.xts(order.by = .$Fecha)
0:dygraph(d, main = "dolar") %>%
0:dySeries(c("Compra"), label = "c") %>%
0:dySeries(c("Venta"), label = "v") %>%
0:dyRangeSelector() %>%
0:dyUnzoom() %>%
0:dyHighlight(highlightCircleSize = 5,
0:highlightSeriesBackgroundAlpha = 0.7,
0:hideOnMouseOut = FALSE)
0:dolar$Promedio = round(dolar$Promedio,2)
0:dl = dolar %>%
0:ggplot(aes(x = Fecha, y = Promedio)) +
0:geom_path(aes(x = Fecha, y = Promedio), alpha = 0.7, size = 1.5, width = 1, color = '#39ad58') +
0:geom_point(aes(x = Fecha, y = Promedio), alpha = 1, size = 4, width = 2,color = 'grey') +
0:ggtitle("Regions With Most Cases") +
0:scale_x_date(date_labels = "%Y") +
0:scale_y_continuous(limits = c(min(dolar$Promedio)/1.10, max(dolar$Promedio)*1.10)) +
0:geom_text(aes(label = paste0("Precio: $",Promedio,'\nPeriodo:',month(dolar$Fecha),'/',year(dolar$Fecha))), hjust = +1, size = 6) +
0:labs(title = 'Dolar Paralelo, Fecha: {frame_along}', x = 'AÃ±o', y = 'Dolar Paralelo', subtitle = "Dinamica del Dolar Paralelo",
0:caption = "Elaboracion propia en base a datos de Ambito.com") +
0:theme_bw() +
0:theme(legend.position = "bottom") +
0:transition_reveal(Fecha) +
0:geom_vline(xintercept=dolar$Fecha[4515],linetype=1,
0:color = "black", size=0.8)
0:anim_save("plot/dolar.gif", dl)
0:plot_ly(dolar) %>%
0:add_lines(x = ~Fecha, y = ~variacion,
0:mode = 'lines',
0:name = "Variacion Tipo de Cambio",
0:line = list(color = '#1149f2', width = 1.5)) %>%
0:add_lines(x = ~Fecha, y = ~sd(dolar$variacion, na.rm = T)*3,
0:mode = 'lines',
0:name = "+3 Desvios Estandard",
0:line = list(color = 'red', width = 1.5)) %>%
0:add_lines(x = ~Fecha, y = ~sd(dolar$variacion, na.rm = T)*-3,
0:mode = 'lines',
0:name = "-3 Desvios Estandard",
0:line = list(color = 'orange', width = 1.5)) %>%
0:layout(title = '<b>Variaciones del Tipo de Cambio desde 2002</b>',
0:yaxis2 = list(overlaying = "y", side = "right", title = 'Recaudacion', showgrid = FALSE ,zeroline = FALSE),
0:yaxis = list(side = 'left', title = '%',showgrid = FALSE, zeroline = FALSE),
0:xaxis = list( title = 'AÃ±o'),
0:legend = list(x = 1.05),
0:hovermode = "compare")
0:View(dolar)
0:View(dolarmep)
0:View(dolaroficial)
0:shiny::runApp()
0:runApp()
0:runApp()
1694301537183:shiny::runApp()
1694301540150:library(bs4Dash)
1694301540183:library(tidyverse)
1694301620469:install.packages("tidyverse")
1694301631581:runApp()
1694301633935:library(bs4Dash)
1694301633945:library(tidyverse)
1694301635741:library(bs4Dash)
1694301635751:library(tidyverse)
1694301635761:library(dplyr)
1694301635770:library(shinycssloaders)
1694301635790:library(waiter)
1694301635808:library(readxl)
1694301635832:library(highcharter)
1694301635852:library(shiny)
1694301635861:library(lubridate)
1694301652922:library(bs4Dash)
1694301652938:library(tidyverse)
1694301652949:library(dplyr)
1694301652958:library(shinycssloaders)
1694301652968:library(waiter)
1694301652977:library(readxl)
1694301652987:library(highcharter)
1694301652997:library(shiny)
1694301653005:library(lubridate)
1694301856992:library(bs4Dash)
1694301857010:library(tidyverse)
1694349535872:library(bs4Dash)
1694349535889:library(tidyverse)
1694349684699:library(bs4Dash)
1694349684713:library(tidyverse)
1694349685104:library(dplyr)
1694349685115:library(shinycssloaders)
1694349685125:library(waiter)
1694349685133:library(readxl)
1694349685142:library(highcharter)
1694349685151:library(shiny)
1694349685160:library(lubridate)
1694349685187:library(reactable)
1694349685204:library(htmltools)
1694349685244:today = format(
1694349685254:with_tz(
1694349685263:Sys.time() ,
1694349685273:tzone = "America/Argentina/Buenos_Aires"),
1694349685283:format = "%Y-%m-%d"
1694349685292:)
1694349685321:today_with_hs = format(
1694349685331:with_tz(
1694349685340:Sys.time() ,
1694349685351:tzone = "America/Argentina/Buenos_Aires"),
1694349685363:format = "%Y-%m-%d %H:%M"
1694349685375:)
1694349685402:edit_dolar_historico = function(df){
1694349685411:return(
1694349685421:df %>% mutate(
1694349685431:Fecha = as.Date(Fecha, format = "%d/%m/%Y"),
1694349685441:Compra = round(as.numeric(Compra),2),
1694349685450:Venta = round(as.numeric(Venta),2),
1694349685460:Promedio = round(as.numeric(Promedio),2),
1694349685470:variacion = round(as.numeric(variacion),2)
1694349685479:))
1694349685492:}
1694349685513:packageVersion("cli")
1694349685535:get_date_interanual = function(df){
1694349685546:fecha_max = max(df$Fecha)
1694349685557:fecha_before = as.Date(fecha_max) - years(1)
1694349685567:while (TRUE) {
1694349685579:dolar_before = df$Promedio[df$Fecha == fecha_before]
1694349685590:if (length(dolar_before) > 0) {
1694349685599:break
1694349685610:} else {
1694349685621:fecha_before = fecha_before - 1
1694349685631:}
1694349685643:}
1694349685653:return(as.Date(fecha_before))
1694349685663:}
1694349685683:df = edit_dolar_historico(read_excel('data/dolar.xlsx') %>%
1694349685694:select(Fecha,Compra,Venta,Promedio,variacion)) %>% arrange(Fecha)
1694349685847:max_date = max(df$Fecha)
1694349685856:min_history_date = min(df$Fecha)
1694349685866:min_date = get_date_interanual(df)
1694349685901:get_dolar_interanual = function(df){
1694349685911:fecha_max = max(df$Fecha)
1694349685921:fecha_before = as.Date(fecha_max) - years(1)
1694349685930:while (TRUE) {
1694349685939:dolar_before = df$Promedio[df$Fecha == fecha_before]
1694349685948:if (length(dolar_before) > 0) {
1694349685959:break
1694349685968:} else {
1694349685976:fecha_before = fecha_before - 1
1694349685985:}
1694349685994:}
1694349686004:dolar_actual = df$Promedio[nrow(df)]
1694349686013:interanual_rate = round(((dolar_actual-dolar_before)/dolar_before)*100,2)
1694349686021:return(interanual_rate)
1694349686029:}
1694349686052:get_dolar_interanual_input = function(df, date_min, date_max){
1694349686065:fecha_max = as.Date(date_max)
1694349686075:fecha_before = as.Date(date_min)
1694349686089:while (TRUE) {
1694349686107:dolar_before = df$Promedio[df$Fecha == fecha_before]
1694349686122:if (length(dolar_before) > 0) {
1694349686137:break
1694349686151:} else {
1694349686166:fecha_before = fecha_before - 1
1694349686177:}
1694349686189:}
1694349686200:while (TRUE) {
1694349686212:dolar_actual = df$Promedio[df$Fecha == fecha_max]
1694349686223:if (length(dolar_actual) > 0) {
1694349686235:break
1694349686247:} else {
1694349686258:fecha_max = fecha_max - 1
1694349686267:}
1694349686277:}
1694349686287:interanual_rate = round(((dolar_actual-dolar_before)/dolar_before)*100,2)
1694349686297:return(interanual_rate)
1694349686306:}
1694349686338:get_dolar_var = function(df, dias){
1694349686349:return(
1694349686358:round((df$Promedio[df$Fecha==max(df$Fecha)] -
1694349686369:df$Promedio[nrow(df) - dias]) /
1694349686379:df$Promedio[nrow(df) - dias],4)*100
1694349686389:)
1694349686399:}
1694349686417:get_icon_arrow = function(df){
1694349686427:actual_value = round(df$brecha[nrow(df)],2)
1694349686436:before_value = round(df$brecha[nrow(df)-1],2)
1694349686446:if (actual_value > before_value){
1694349686465:return(
1694349686475:c("danger", "arrow-up")
1694349686485:)
1694349686495:} else if (actual_value < before_value) {
1694349686506:return(
1694349686517:c("primary", "arrow-down")
1694349686528:)
1694349686539:} else {
1694349686549:c("teal","equals")
1694349686561:}
1694349686584:}
1694349686620:get_table = function(df){
1694349686632:return(
1694349686643:reactable::reactable(
1694349686653:na.omit(df) %>% arrange(desc(Fecha)),
1694349686663:columns = list(
1694349686675:Fecha = colDef(
1694349686685:name = "Fecha",
1694349686696:align = "center",
1694349686706:minWidth = 120
1694349686716:),
1694349686728:Compra = colDef(
1694349686738:name = "Compra",
1694349686750:align = "center",
1694349686761:minWidth = 60
1694349686771:),
1694349686782:Venta = colDef(
1694349686792:name = "Venta",
1694349686804:align = "left",
1694349686815:minWidth = 60
1694349686826:),
1694349686838:Promedio = colDef(
1694349686849:name = "Promedio",
1694349686861:align = "left",
1694349686872:minWidth = 60
1694349686882:),
1694349686893:variacion = colDef(
1694349686904:name = "variacion",
1694349686915:align = "left",
1694349686926:minWidth = 60
1694349686937:)
1694349686948:),
1694349686958:searchable = TRUE,
1694349686969:striped = TRUE,
1694349686979:defaultPageSize = 8)
1694349686990:)
1694349687000:}
1694349687048:get_date = function(df, date){
1694349687061:fecha = as.Date(date)
1694349687074:while (TRUE) {
1694349687087:dolar = df$Promedio[df$Fecha == fecha]
1694349687102:if (length(dolar) > 0) {
1694349687118:break
1694349687150:} else {
1694349687173:fecha = fecha - 1
1694349687190:}
1694349687209:}
1694349687224:return(as.Date(fecha))
1694349687239:}
1694349687269:ui <- dashboardPage(
1694349687282:options = F,
1694349687296:header = dashboardHeader(
1694349687310:skin = "dark",
1694349687323:fixed = T,
1694349687338:title = dashboardBrand(
1694349687349:title ="Dolar Argentina",
1694349687362:image = "https://w7.pngwing.com/pngs/563/791/png-transparent-dollar-sign-illustration-united-states-dollar-icon-design-icon-dollar-sign-text-logo-number.png")
1694349687372:),
1694349687384:sidebar = dashboardSidebar(
1694349687395:background = "lightgray",
1694349687406:background_dark = "darkgray",
1694349687418:skin = "light",
1694349687427:width = 500,
1694349687438:sidebarMenu(
1694349687449:menuItem(
1694349687459:text = "Principal",
1694349687471:tabName = "dashboard",
1694349687482:startExpanded = T,
1694349687494:icon = icon("home")
1694349687506:),
1694349687518:menuItem(
1694349687529:text = "Brechas",
1694349687539:tabName = "brechas",
1694349687552:startExpanded = T,
1694349687562:icon = icon("chart-bar")
1694349687573:),
1694349687584:menuItem(
1694349687596:text = "Datos",
1694349687612:tabName = "datos",
1694349687622:startExpanded = T,
1694349687635:icon = icon("database")
1694349687650:),
1694349687662:menuItem(
1694349687672:text = "Acerca de",
1694349687684:tabName = "about",
1694349687694:icon = icon("info-circle"))
1694349687705:)
1694349687716:),
1694349687728:body = dashboardBody(
1694349687741:tags$style(
1694349687751:type = 'text/css',
1694349687762:'.rt-align-left {color: black!important; }',
1694349687773:'.rt-align-center {color: black!important; }',
1694349687784:'.ReactTable {color: black!important; }',
1694349687795:'.sidebar .shiny-input-container {padding: 0px 21px 0px 16px!important; }',
1694349687807:'.btn-primary {color: #fff!important; background-color: #5d6b7a!important; border-color: #007bff!important; box-shadow: none!important;}',
1694349687828:'.small-box .inner {padding: 12px!important; text-align: center!important; font-size: 37px!important;}'
1694349687839:),
1694349687850:tabItems(
1694349687862:tabItem(
1694349687874:tabName = "dashboard",
1694349687885:h3("Precios Dolar Economia Argentina"),
1694349687895:p("Dashboard sobre el precio del dolar en ",
1694349687906:span("Argentina", style = "color: green;"), paste0(". Datos actualizados hasta: ",today_with_hs)),
1694349687916:fluidRow(
1694349687927:bs4ValueBoxOutput("valuebox_1",width = 4),
1694349687948:bs4ValueBoxOutput("valuebox_2",width = 4),
1694349687961:bs4ValueBoxOutput("valuebox_3",width = 4)
1694349687974:),
1694349687987:fluidRow(
1694349687997:column(
1694349688012:width = 4,
1694349688024:box(
1694349688036:title = "Inputs",
1694349688046:status = "teal",
1694349688057:icon = icon("keyboard"),
1694349688068:solidHeader = TRUE,
1694349688083:width = 12,
1694349688094:tabPanel(
1694349688107:title = "Time Serie",
1694349688116:numericInput(
1694349688128:inputId = "variaciondias",
1694349688138:label = HTML("Dias de Variacion %<br><br>",
1694349688148:"Seleccionar la cantidad de dias para atras para ver la variacion % de los 3 Tipos de Cambio."),
1694349688161:min = 1,
1694349688176:max = 5,
1694349688194:value = 5
1694349688214:),
1694349688234:dateRangeInput(
1694349688254:"daterange3",
1694349688271:label = HTML(
1694349688287:"Rango de Fechas: <br><br>",
1694349688302:"Seleccionar un rango de fechas para ver la variacion del Tipo de Cambio Blue, la Serie Temporal del precio y de la variacion respecto al dia anterior."),
1694349688317:start  = min_date,
1694349688330:end    = max_date,
1694349688342:min    = min_history_date,
1694349688354:max    = max_date,
1694349688366:format = "dd/mm/yyyy",
1694349688377:separator = " - ",
1694349688387:language = "es"
1694349688397:)
1694349688407:)
1694349688416:)
1694349688426:),
1694349688437:column(
1694349688447:width = 8,
1694349688458:box(
1694349688469:title = "Serie Temporal",
1694349688480:width = 12,
1694349688491:status = "teal",
1694349688506:icon = icon("chart-line"),
1694349688517:solidHeader = TRUE,
1694349688528:tabPanel(
1694349688539:title = "Var",
1694349688550:withSpinner(
1694349688560:highchartOutput("timeserie"),
1694349688571:type = 1
1694349688582:)
1694349688593:)
1694349688604:)
1694349688615:),
1694349688626:column(
1694349688637:width = 12,
1694349688646:box(
1694349688657:title = "Variacion Dolar Blue",
1694349688670:width = 12,
1694349688683:status = "teal",
1694349688693:icon = icon("chart-line"),
1694349688705:solidHeader = TRUE,
1694349688718:tabPanel(
1694349688730:title = "Variacion Dolar Blue",
1694349688743:withSpinner(
1694349688754:highchartOutput("varplot"),
1694349688764:type = 1
1694349688776:)
1694349688787:)
1694349688798:)
1694349688809:)
1694349688819:)),
1694349688838:tabItem(
1694349688849:tabName = "brechas",
1694349688860:p("Los colores indican un cambio en la brecha cambiaria respecto al dia anterior.",
1694349688871:span("Rojo", style = "color: red;"), paste0(" indica un incemento de la brecha."),
1694349688882:span("Azul", style = "color: blue;"), paste0(" indica una caida y"),
1694349688893:span(" Verde", style = "color: green;"), paste0(" que permanece constante.")),
1694349688903:fluidRow(
1694349688913:bs4ValueBoxOutput("valuebox_brechas_1",width = 4),
1694349688923:bs4ValueBoxOutput("valuebox_brechas_2",width = 4),
1694349688933:bs4ValueBoxOutput("valuebox_brechas_3",width = 4)
1694349688942:),
1694349688952:fluidRow(
1694349688963:column(12,
1694349688973:tabBox(title = "",
1694349688984:status = "gray",
1694349688995:width = 12,
1694349689006:solidHeader = TRUE,
1694349689017:maximizable = T,
1694349689028:tabPanel(
1694349689039:title = "Blue/Mep",
1694349689049:withSpinner(
1694349689060:highchartOutput("barplot_bluevsmep"))
1694349689071:),
1694349689082:tabPanel(
1694349689093:title = "Mep/Oficial",
1694349689105:withSpinner(
1694349689114:highchartOutput("barplot_mepvsoficial"))
1694349689125:),
1694349689136:tabPanel(
1694349689147:title = "Blue/Oficial",
1694349689159:withSpinner(
1694349689169:highchartOutput("barplot_bluevsoficial"))
1694349689179:)
1694349689189:)
1694349689201:)
1694349689215:)
1694349689233:),
1694349689250:tabItem(
1694349689266:tabName = "datos",
1694349689283:fluidRow(
1694349689298:column(12,
1694349689329:tabBox(
1694349689341:title = "",
1694349689353:status = "gray",
1694349689366:width = 12,
1694349689379:solidHeader = TRUE,
1694349689392:maximizable = T,
1694349689403:tabPanel(
1694349689413:title = "Dolar Blue",
1694349689424:reactable::reactableOutput("table_blue_output")
1694349689435:),
1694349689446:tabPanel(
1694349689458:title = "Dolar Mep",
1694349689484:reactable::reactableOutput("table_mep_output")
1694349689494:),
1694349689505:tabPanel(
1694349689516:title = "Dolar Oficial",
1694349689538:reactable::reactableOutput("table_oficial_output")
1694349689549:)
1694349689562:)
1694349689575:)
1694349689585:)
1694349689598:),
1694349689610:tabItem(
1694349689620:tabName = "about",
1694349689633:h2("Acerca de"),
1694349689645:fluidRow(
1694349689655:box(
1694349689670:title = strong("Dashboard sobre los tipos de cambio en Argentina"), solidHeader = TRUE,
1694349689682:p("Este Dashboard tiene la finalidad de mostrar la variaciÃ³n de los distintos tipos de cambio en  ", strong("Argentina"), "."),
1694349689697:p("Podemos ver las siguientes mÃ©tricas:"),
1694349689712:tags$ol(
1694349689725:tags$li("VariaciÃ³n interanual del tipo de cambio paralelo"),
1694349689736:tags$li("VariaciÃ³n diaria del tipo de cambio paralelo, mep y oficial."),
1694349689747:tags$li("VariaciÃ³n diaria de las brechas cambiarias. Blue vs Mep, Mep vs Oficial y Blue vs Oficial")
1694349689757:),
1694349689767:p("Packages:"),
1694349689782:tags$ul(
1694349689796:tags$li(tags$a(href="https://jkunst.com/highcharter/index.html", "highcharter")),
1694349689809:tags$li(tags$a(href="https://rinterface.github.io/bs4Dash/index.html", "bs4Dash")),
1694349689819:tags$li(tags$a(href="https://dplyr.tidyverse.org/", "dplyr"))
1694349689831:)
1694349689841:),
1694349689851:box(
1694349689863:title = strong("Trabajo hecho por:"), solidHeader = TRUE,
1694349689874:h5("Galoto Maximiliano"),
1694349689884:tags$ul(
1694349689895:tags$li(tags$a(href="https://www.linkedin.com/in/maximilianogaloto", "Linkedin")),
1694349689907:tags$li(tags$a(href="https://github.com/MGaloto", "GitHub")))
1694349689916:)
1694349689928:)
1694349689938:)
1694349689948:)
1694349689960:)
1694349689970:)
1694349690144:# SV ----------------------------------------------------------------------
1694349690153:server <- function(input, output,session) {
1694349690186:dolar = edit_dolar_historico(
1694349690197:read_excel('data/dolar.xlsx') %>%
1694349690207:arrange(Fecha) %>%
1694349690219:select(Fecha,Compra,Venta,Promedio,variacion))
1694349690244:dolarmep= edit_dolar_historico(
1694349690260:read_excel('data/dolarmep.xlsx') %>%
1694349690277:arrange(Fecha) %>%
1694349690293:select(Fecha,Compra,Venta,Promedio,variacion))
1694349690317:dolaroficial=edit_dolar_historico(
1694349690330:read_excel('data/dolaroficial.xlsx') %>%
1694349690342:arrange(Fecha) %>%
1694349690352:select(Fecha,Compra,Venta,Promedio,variacion))
1694349690371:dolarmepcierre = dolarmep$Promedio[nrow(dolarmep)]
1694349690382:dolaroficialcierre = dolaroficial$Promedio[nrow(dolaroficial)]
1694349690393:dolarbluecierre = dolar$Promedio[nrow(dolar)]
1694349690417:mepvsoficial = merge(
1694349690427:na.omit(dolarmep %>% mutate(prommep = Promedio) %>% select(Fecha,prommep)),
1694349690442:na.omit(dolaroficial %>% mutate(promoficial = Promedio) %>% select(Fecha,promoficial)),
1694349690455:by = "Fecha",
1694349690465:all = FALSE
1694349690475:) %>% mutate(
1694349690485:brecha = round((prommep-promoficial) / promoficial,2)*100
1694349690495:) %>% select(Fecha, brecha) %>% arrange(Fecha)
1694349690512:bluevsoficial = merge(
1694349690522:na.omit(dolar %>% mutate(promblue = Promedio) %>% select(Fecha,promblue)),
1694349690532:na.omit(dolaroficial %>% mutate(promoficial = Promedio) %>% select(Fecha,promoficial)),
1694349690542:by = "Fecha",
1694349690552:all = FALSE
1694349690564:) %>% mutate(
1694349690573:brecha = round((promblue-promoficial) / promoficial,2)*100
1694349690585:) %>% select(Fecha, brecha) %>% arrange(Fecha)
1694349690603:bluevsmep = merge(
1694349690614:na.omit(dolar %>% mutate(promblue = Promedio) %>% select(Fecha,promblue)),
1694349690624:na.omit(dolarmep %>% mutate(prommep = Promedio) %>% select(Fecha,prommep)),
1694349690633:by = "Fecha",
1694349690643:all = FALSE
1694349690654:) %>% mutate(
1694349690664:brecha = round((promblue-prommep) / prommep,2)*100
1694349690673:) %>% select(Fecha, brecha) %>% arrange(Fecha)
1694349690691:info_mepvsoficial = get_icon_arrow(mepvsoficial)
1694349690700:info_bluevsoficial = get_icon_arrow(bluevsoficial)
1694349690709:info_bluevsmep = get_icon_arrow(bluevsmep)
1694349690736:rv <- reactiveValues()
1694349690768:observeEvent(input$variaciondias, {
1694349690786:rv$dias_variacion = as.numeric(input$variaciondias)
1694349690797:rv$var_dolar_blue = get_dolar_var(dolar, rv$dias_variacion)
1694349690807:rv$var_dolar_oficial = get_dolar_var(dolaroficial, rv$dias_variacion)
1694349690817:rv$var_dolar_mep = get_dolar_var(dolarmep, rv$dias_variacion)
1694349690834:}, ignoreNULL = FALSE)
1694349690852:output$table_blue_output <- reactable::renderReactable({
1694349690862:get_table(dolar)
1694349690882:})
1694349690895:output$table_mep_output <- reactable::renderReactable({
1694349690907:get_table(dolarmep)
1694349690930:})
1694349690942:output$table_oficial_output <- reactable::renderReactable({
1694349690955:get_table(dolaroficial)
1694349690975:})
1694349691011:output$varplot <- renderHighchart({
1694349691031:date_from = get_date(dolar,as.Date(input$daterange3[1]))
1694349691042:date_to = get_date(dolar,as.Date(input$daterange3[2]))
1694349691061:highcharter::hchart(
1694349691073:dolar %>%
1694349691083:filter(Fecha >= date_from,
1694349691095:Fecha <= date_to) %>%
1694349691106:select(Fecha, variacion),
1694349691116:type = "line",
1694349691126:highcharter::hcaes(x = "Fecha", y = "variacion"),
1694349691138:color = "#007bff",
1694349691149:name = "ver",
1694349691160:id = "trend",
1694349691170:showInLegend = TRUE) %>%
1694349691181:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Variacion: {point.y}%") %>%
1694349691203:highcharter::hc_plotOptions(
1694349691214:line = list(
1694349691226:color = "blue",
1694349691237:marker = list(
1694349691247:fillColor = "white",
1694349691258:lineWidth = 2,
1694349691270:radius=1,
1694349691285:lineColor = NULL
1694349691313:)
1694349691332:)
1694349691347:) %>%
1694349691361:highcharter::hc_legend(enabled = FALSE) %>%
1694349691375:highcharter::hc_xAxis(
1694349691390:title = list(text = ""),
1694349691403:gridLineWidth = 0,
1694349691415:dateTimeLabelFormats = list(day = '%Y'),
1694349691426:type = "datetime",
1694349691439:reversed = FALSE,
1694349691451:labels = list(
1694349691463:style = list(color = "black", fontWeight = "bold")
1694349691474:)
1694349691485:) %>%
1694349691496:highcharter::hc_yAxis(
1694349691506:title = list(text = "%",
1694349691518:style = list(color = "black", fontWeight = "bold")),
1694349691528:gridLineWidth = 0,
1694349691539:reversed = FALSE,
1694349691550:labels = list(
1694349691561:style = list(color = "black", fontWeight = "bold")
1694349691571:)
1694349691583:) %>%
1694349691606:highcharter::hc_caption(
1694349691621:text = paste0("Variacion del Dolar Blue"),
1694349691631:style = list(fontSize = '12px', fontWeight = 'bold', color = "black")) %>%
1694349691641:highcharter::hc_tooltip(
1694349691652:crosshairs = TRUE,
1694349691663:backgroundColor = "#F0F0F0",
1694349691674:shared = TRUE,
1694349691685:borderWidth = 5
1694349691696:) %>%
1694349691707:hc_title(
1694349691718:text = paste0('Dolar Blue Variacion Argentina'),
1694349691730:style = list(fontSize = '16px', fontWeight = 'bold', color = "black"))
1694349691743:})
1694349691782:output$timeserie <- renderHighchart({
1694349691804:highcharter::hchart(
1694349691815:dolar %>%
1694349691826:filter(Fecha >= as.Date(input$daterange3[1]), Fecha <= as.Date(input$daterange3[2])) %>%
1694349691836:select(Fecha, Promedio),
1694349691845:type = "line",
1694349691855:highcharter::hcaes(x = "Fecha", y = "Promedio"),
1694349691865:color = "#007bff",
1694349691879:name = "ver",
1694349691891:id = "trend",
1694349691900:showInLegend = TRUE) %>%
1694349691910:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Dolar Blue: ${point.y}") %>%
1694349691931:highcharter::hc_plotOptions(
1694349691942:line = list(
1694349691956:color = "blue",
1694349691966:marker = list(
1694349691978:fillColor = "white",
1694349691988:lineWidth = 2,
1694349691998:radius=1,
1694349692008:lineColor = NULL
1694349692020:)
1694349692033:)
1694349692044:) %>%
1694349692059:highcharter::hc_legend(enabled = FALSE) %>%
1694349692070:highcharter::hc_xAxis(
1694349692082:title = list(text = ""),
1694349692095:gridLineWidth = 0,
1694349692107:dateTimeLabelFormats = list(day = '%Y'),
1694349692119:type = "datetime",
1694349692132:reversed = FALSE,
1694349692143:labels = list(
1694349692155:style = list(color = "black", fontWeight = "bold")
1694349692167:)
1694349692177:) %>%
1694349692188:highcharter::hc_yAxis(
1694349692197:title = list(text = "Precio",
1694349692207:style = list(color = "black", fontWeight = "bold")),
1694349692216:gridLineWidth = 0,
1694349692226:reversed = FALSE,
1694349692237:labels = list(
1694349692247:style = list(color = "black", fontWeight = "bold")
1694349692257:)
1694349692267:) %>%
1694349692287:highcharter::hc_caption(
1694349692297:text = paste0("Serie Temporal del Dolar Paralelo."),
1694349692308:style = list(fontSize = '12px', fontWeight = 'bold', color = "black")) %>%
1694349692320:highcharter::hc_tooltip(
1694349692333:crosshairs = TRUE,
1694349692349:backgroundColor = "#F0F0F0",
1694349692363:shared = TRUE,
1694349692377:borderWidth = 5
1694349692388:) %>%
1694349692401:hc_title(
1694349692416:text = paste0('Dolar Paralelo Argentina'),
1694349692430:style = list(fontSize = '16px', fontWeight = 'bold', color = "black"))
1694349692445:})
1694349692475:output$barplot_mepvsoficial <- renderHighchart({
1694349692496:highchart() %>%
1694349692509:hc_chart(type = "column") %>%
1694349692522:hc_title(text = "Brecha Dolar Mep vs Oficial") %>%
1694349692534:hc_xAxis(categories = mepvsoficial$Fecha) %>%
1694349692545:hc_yAxis(title = list(text = "Brecha")) %>%
1694349692556:hc_add_series(name = "brecha",
1694349692567:data = mepvsoficial$brecha,
1694349692578:color = "#007bff") %>%
1694349692589:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Brecha: % {point.y}") %>%
1694349692599:highcharter::hc_legend(enabled = FALSE) %>%
1694349692609:highcharter::hc_xAxis(
1694349692621:title = list(text = ""),
1694349692631:reversed = FALSE,
1694349692642:labels = list(
1694349692653:style = list(color = "black", fontWeight = "bold")
1694349692664:)
1694349692676:) %>%
1694349692688:highcharter::hc_yAxis(
1694349692698:title = list(text = "% Brecha",
1694349692708:style = list(color = "black", fontWeight = "bold")),
1694349692719:gridLineWidth = 0,
1694349692730:reversed = FALSE,
1694349692742:labels = list(
1694349692753:style = list(color = "black", fontWeight = "bold")
1694349692763:)
1694349692773:) %>%
1694349692790:highcharter::hc_caption(
1694349692799:text = paste0("Brecha Mep vs Oficial."),
1694349692809:style = list(fontSize = '12px', fontWeight = 'bold', color = "black")) %>%
1694349692820:highcharter::hc_tooltip(
1694349692829:crosshairs = TRUE,
1694349692841:backgroundColor = "#F0F0F0",
1694349692853:shared = TRUE,
1694349692867:borderWidth = 5
1694349692881:) %>%
1694349692893:hc_title(
1694349692904:text = paste0('Brecha Cambiaria.'),
1694349692915:style = list(fontSize = '16px', fontWeight = 'bold', color = "black"))
1694349692941:})
1694349692965:output$barplot_bluevsoficial <- renderHighchart({
1694349692983:highchart() %>%
1694349692994:hc_chart(type = "column") %>%
1694349693005:hc_title(text = "Brecha Dolar Blue vs Oficial") %>%
1694349693014:hc_xAxis(categories = bluevsoficial$Fecha) %>%
1694349693024:hc_yAxis(title = list(text = "Brecha")) %>%
1694349693036:hc_add_series(name = "brecha",
1694349693046:data = bluevsoficial$brecha,
1694349693056:color = "#007bff") %>%
1694349693066:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Brecha: % {point.y}") %>%
1694349693076:highcharter::hc_legend(enabled = FALSE) %>%
1694349693087:highcharter::hc_xAxis(
1694349693097:title = list(text = ""),
1694349693107:reversed = FALSE,
1694349693117:labels = list(
1694349693128:style = list(color = "black", fontWeight = "bold")
1694349693137:)
1694349693147:) %>%
1694349693157:highcharter::hc_yAxis(
1694349693167:title = list(text = "% Brecha",
1694349693179:style = list(color = "black", fontWeight = "bold")),
1694349693191:gridLineWidth = 0,
1694349693203:reversed = FALSE,
1694349693217:labels = list(
1694349693229:style = list(color = "black", fontWeight = "bold")
1694349693242:)
1694349693253:) %>%
1694349693272:highcharter::hc_caption(
1694349693282:text = paste0("Brecha Blue vs Oficial."),
1694349693293:style = list(fontSize = '12px', fontWeight = 'bold', color = "black")) %>%
1694349693304:highcharter::hc_tooltip(
1694349693313:crosshairs = TRUE,
1694349693324:backgroundColor = "#F0F0F0",
1694349693335:shared = TRUE,
1694349693347:borderWidth = 5
1694349693357:) %>%
1694349693367:hc_title(
1694349693377:text = paste0('Brecha Cambiaria.'),
1694349693387:style = list(fontSize = '16px', fontWeight = 'bold', color = "black"))
1694349693423:})
1694349693460:output$barplot_bluevsmep <- renderHighchart({
1694349693482:highchart() %>%
1694349693496:hc_chart(type = "column") %>%
1694349693508:hc_title(text = "Brecha Dolar Blue vs Mep") %>%
1694349693521:hc_xAxis(categories = bluevsmep$Fecha) %>%
1694349693533:hc_yAxis(title = list(text = "Brecha")) %>%
1694349693546:hc_add_series(name = "brecha",
1694349693559:data = bluevsmep$brecha,
1694349693572:color = "#007bff") %>%
1694349693582:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Brecha: % {point.y}") %>%
1694349693593:highcharter::hc_legend(enabled = FALSE) %>%
1694349693608:highcharter::hc_xAxis(
1694349693619:title = list(text = ""),
1694349693630:reversed = FALSE,
1694349693640:labels = list(
1694349693651:style = list(color = "black", fontWeight = "bold")
1694349693662:)
1694349693673:) %>%
1694349693684:highcharter::hc_yAxis(
1694349693695:title = list(text = "% Brecha",
1694349693706:style = list(color = "black", fontWeight = "bold")),
1694349693717:gridLineWidth = 0,
1694349693729:reversed = FALSE,
1694349693740:labels = list(
1694349693751:style = list(color = "black", fontWeight = "bold")
1694349693762:)
1694349693773:) %>%
1694349693792:highcharter::hc_caption(
1694349693803:text = paste0("Brecha Blue vs Mep"),
1694349693815:style = list(fontSize = '12px', fontWeight = 'bold', color = "black")) %>%
1694349693827:highcharter::hc_tooltip(
1694349693838:crosshairs = TRUE,
1694349693849:backgroundColor = "#F0F0F0",
1694349693860:shared = TRUE,
1694349693871:borderWidth = 5
1694349693883:) %>%
1694349693895:hc_title(
1694349693911:text = paste0('Brecha Cambiaria.'),
1694349693924:style = list(fontSize = '16px', fontWeight = 'bold', color = "black"))
1694349693949:})
1694349694000:output$valuebox_1 <- renderbs4ValueBox({
1694349694016:bs4ValueBox(
1694349694026:value = "",
1694349694040:subtitle = HTML(
1694349694061:"Blue: $", as.character(dolarbluecierre),"<br>",
1694349694072:"Mep: $", as.character(dolarmepcierre),"<br>",
1694349694082:"Oficial: $", as.character(dolaroficialcierre)),
1694349694094:icon = icon("dollar-sign"),
1694349694104:color = "teal",
1694349694115:width = 3,
1694349694126:footer = div(paste0("Precios al ",today))
1694349694137:)
1694349694146:})
1694349694165:output$valuebox_3 <- renderbs4ValueBox({
1694349694183:bs4ValueBox(
1694349694193:value = paste0(
1694349694203:as.character(
1694349694214:get_dolar_interanual_input(
1694349694225:dolar, input$daterange3[1], input$daterange3[2]
1694349694235:)
1694349694246:), " %"),
1694349694256:subtitle = paste0("Variacion % Dolar Blue"),
1694349694266:icon = icon("info"),
1694349694277:color = "teal",
1694349694287:width = 3,
1694349694298:footer = div(
1694349694311:paste0(
1694349694324:"De: ", input$daterange3[1],
1694349694336:" a: ",input$daterange3[2]
1694349694349:)
1694349694362:)
1694349694375:)
1694349694394:})
1694349694421:output$valuebox_2 <- renderbs4ValueBox({
1694349694441:bs4ValueBox(
1694349694454:value = "",
1694349694468:subtitle = HTML(
1694349694487:"Blue: ", as.character(rv$var_dolar_blue)," %<br>",
1694349694501:"Mep: ", as.character(rv$var_dolar_mep)," %<br>",
1694349694517:"Oficial: ", as.character(rv$var_dolar_oficial)," %"),
1694349694530:icon = icon("coins"),
1694349694544:color = "teal",
1694349694556:width = 3,
1694349694566:footer = div(paste0("Variacion % Ultimos ", as.character(rv$dias_variacion) ," dias"))
1694349694578:)
1694349694590:})
1694349694625:output$valuebox_brechas_1 <- renderbs4ValueBox({
1694349694636:bs4ValueBox(
1694349694645:value = paste0(
1694349694655:as.character(
1694349694665:bluevsmep$brecha[nrow(bluevsmep)]
1694349694675:), " %"),
1694349694686:subtitle = paste0("Brecha Blue vs Mep"),
1694349694696:icon = icon(info_bluevsmep[2]),
1694349694706:color = info_bluevsmep[1],
1694349694717:width = 3,
1694349694727:footer = div(
1694349694738:paste0(
1694349694748:max(bluevsmep$Fecha)
1694349694757:)
1694349694767:)
1694349694777:)
1694349694789:})
1694349694808:output$valuebox_brechas_2 <- renderbs4ValueBox({
1694349694820:bs4ValueBox(
1694349694831:value = paste0(
1694349694842:as.character(
1694349694852:mepvsoficial$brecha[nrow(mepvsoficial)]
1694349694862:), " %"),
1694349694872:subtitle = paste0("Brecha Mep vs Oficial"),
1694349694883:icon = icon(info_mepvsoficial[2]),
1694349694895:color = info_mepvsoficial[1],
1694349694907:width = 3,
1694349694916:footer = div(
1694349694928:paste0(
1694349694941:max(mepvsoficial$Fecha)
1694349694955:)
1694349694966:)
1694349694977:)
1694349694988:})
1694349695006:output$valuebox_brechas_3 <- renderbs4ValueBox({
1694349695015:bs4ValueBox(
1694349695026:value = paste0(
1694349695037:as.character(
1694349695048:bluevsoficial$brecha[nrow(bluevsoficial)]
1694349695058:), " %"),
1694349695070:subtitle = paste0("Brecha Blue vs Oficial"),
1694349695080:icon = icon(info_bluevsoficial[2]),
1694349695091:color = info_bluevsoficial[1],
1694349695101:width = 3,
1694349695111:footer = div(
1694349695121:paste0(
1694349695132:max(bluevsoficial$Fecha)
1694349695142:)
1694349695152:)
1694349695162:)
1694349695172:})
1694349695197:}
1694349695217:shinyApp(ui = ui, server = server)
1694351020065:library(bs4Dash)
1694351020076:library(tidyverse)
1694351020086:library(dplyr)
1694351020095:library(shinycssloaders)
1694351020106:library(waiter)
1694351020128:library(readxl)
1694351020138:library(highcharter)
1694351020150:library(shiny)
1694351020160:library(lubridate)
1694351020168:library(reactable)
1694351020176:library(htmltools)
1694351020211:today = format(
1694351020219:with_tz(
1694351020229:Sys.time() ,
1694351020240:tzone = "America/Argentina/Buenos_Aires"),
1694351020251:format = "%Y-%m-%d"
1694351020265:)
1694351020280:today_with_hs = format(
1694351020289:with_tz(
1694351020298:Sys.time() ,
1694351020308:tzone = "America/Argentina/Buenos_Aires"),
1694351020317:format = "%Y-%m-%d %H:%M"
1694351020327:)
1694351020351:edit_dolar_historico = function(df){
1694351020361:return(
1694351020370:df %>% mutate(
1694351020379:Fecha = as.Date(Fecha, format = "%d/%m/%Y"),
1694351020387:Compra = round(as.numeric(Compra),2),
1694351020397:Venta = round(as.numeric(Venta),2),
1694351020407:Promedio = round(as.numeric(Promedio),2),
1694351020418:variacion = round(as.numeric(variacion),2)
1694351020426:))
1694351020437:}
1694351020456:packageVersion("cli")
1694351020474:get_date_interanual = function(df){
1694351020483:fecha_max = max(df$Fecha)
1694351020491:fecha_before = as.Date(fecha_max) - years(1)
1694351020501:while (TRUE) {
1694351020510:dolar_before = df$Promedio[df$Fecha == fecha_before]
1694351020518:if (length(dolar_before) > 0) {
1694351020527:break
1694351020539:} else {
1694351020551:fecha_before = fecha_before - 1
1694351020562:}
1694351020571:}
1694351020580:return(as.Date(fecha_before))
1694351020589:}
1694351020605:df = edit_dolar_historico(read_excel('data/dolar.xlsx') %>%
1694351020624:select(Fecha,Compra,Venta,Promedio,variacion)) %>% arrange(Fecha)
1694351020828:max_date = max(df$Fecha)
1694351020840:min_history_date = min(df$Fecha)
1694351020849:min_date = get_date_interanual(df)
1694351020899:get_dolar_interanual = function(df){
1694351020909:fecha_max = max(df$Fecha)
1694351020918:fecha_before = as.Date(fecha_max) - years(1)
1694351020929:while (TRUE) {
1694351020940:dolar_before = df$Promedio[df$Fecha == fecha_before]
1694351020949:if (length(dolar_before) > 0) {
1694351020959:break
1694351020970:} else {
1694351020982:fecha_before = fecha_before - 1
1694351020992:}
1694351021008:}
1694351021023:dolar_actual = df$Promedio[nrow(df)]
1694351021033:interanual_rate = round(((dolar_actual-dolar_before)/dolar_before)*100,2)
1694351021048:return(interanual_rate)
1694351021057:}
1694351021086:get_dolar_interanual_input = function(df, date_min, date_max){
1694351021096:fecha_max = as.Date(date_max)
1694351021109:fecha_before = as.Date(date_min)
1694351021120:while (TRUE) {
1694351021130:dolar_before = df$Promedio[df$Fecha == fecha_before]
1694351021139:if (length(dolar_before) > 0) {
1694351021150:break
1694351021161:} else {
1694351021171:fecha_before = fecha_before - 1
1694351021180:}
1694351021190:}
1694351021200:while (TRUE) {
1694351021210:dolar_actual = df$Promedio[df$Fecha == fecha_max]
1694351021220:if (length(dolar_actual) > 0) {
1694351021230:break
1694351021242:} else {
1694351021252:fecha_max = fecha_max - 1
1694351021272:}
1694351021282:}
1694351021292:interanual_rate = round(((dolar_actual-dolar_before)/dolar_before)*100,2)
1694351021302:return(interanual_rate)
1694351021311:}
1694351021344:get_dolar_var = function(df, dias){
1694351021355:return(
1694351021365:round((df$Promedio[df$Fecha==max(df$Fecha)] -
1694351021375:df$Promedio[nrow(df) - dias]) /
1694351021385:df$Promedio[nrow(df) - dias],4)*100
1694351021395:)
1694351021404:}
1694351021422:get_icon_arrow = function(df){
1694351021432:actual_value = round(df$brecha[nrow(df)],2)
1694351021442:before_value = round(df$brecha[nrow(df)-1],2)
1694351021451:if (actual_value > before_value){
1694351021463:return(
1694351021472:c("danger", "arrow-up")
1694351021483:)
1694351021494:} else if (actual_value < before_value) {
1694351021504:return(
1694351021514:c("primary", "arrow-down")
1694351021526:)
1694351021537:} else {
1694351021549:c("teal","equals")
1694351021559:}
1694351021581:}
1694351021615:get_table = function(df){
1694351021625:return(
1694351021637:reactable::reactable(
1694351021650:na.omit(df) %>% arrange(desc(Fecha)),
1694351021666:columns = list(
1694351021679:Fecha = colDef(
1694351021700:name = "Fecha",
1694351021717:align = "center",
1694351021731:minWidth = 120
1694351021747:),
1694351021760:Compra = colDef(
1694351021774:name = "Compra",
1694351021787:align = "center",
1694351021800:minWidth = 60
1694351021813:),
1694351021824:Venta = colDef(
1694351021836:name = "Venta",
1694351021847:align = "left",
1694351021859:minWidth = 60
1694351021869:),
1694351021878:Promedio = colDef(
1694351021888:name = "Promedio",
1694351021899:align = "left",
1694351021909:minWidth = 60
1694351021919:),
1694351021928:variacion = colDef(
1694351021937:name = "variacion",
1694351021946:align = "left",
1694351021955:minWidth = 60
1694351021963:)
1694351021972:),
1694351021982:searchable = TRUE,
1694351021994:striped = TRUE,
1694351022004:defaultPageSize = 8)
1694351022015:)
1694351022026:}
1694351022075:get_date = function(df, date){
1694351022088:fecha = as.Date(date)
1694351022103:while (TRUE) {
1694351022115:dolar = df$Promedio[df$Fecha == fecha]
1694351022129:if (length(dolar) > 0) {
1694351022142:break
1694351022155:} else {
1694351022168:fecha = fecha - 1
1694351022179:}
1694351022189:}
1694351022198:return(as.Date(fecha))
1694351022207:}
1694351022228:ui <- dashboardPage(
1694351022238:options = F,
1694351022246:header = dashboardHeader(
1694351022256:skin = "dark",
1694351022276:fixed = T,
1694351022286:title = dashboardBrand(
1694351022298:title ="Dolar Argentina",
1694351022308:image = "https://w7.pngwing.com/pngs/563/791/png-transparent-dollar-sign-illustration-united-states-dollar-icon-design-icon-dollar-sign-text-logo-number.png")
1694351022318:),
1694351022329:sidebar = dashboardSidebar(
1694351022342:background = "lightgray",
1694351022354:background_dark = "darkgray",
1694351022364:skin = "light",
1694351022374:width = 500,
1694351022384:sidebarMenu(
1694351022394:menuItem(
1694351022404:text = "Principal",
1694351022414:tabName = "dashboard",
1694351022424:startExpanded = T,
1694351022434:icon = icon("home")
1694351022444:),
1694351022455:menuItem(
1694351022465:text = "Brechas",
1694351022477:tabName = "brechas",
1694351022487:startExpanded = T,
1694351022498:icon = icon("chart-bar")
1694351022509:),
1694351022520:menuItem(
1694351022531:text = "Datos",
1694351022542:tabName = "datos",
1694351022553:startExpanded = T,
1694351022563:icon = icon("database")
1694351022574:),
1694351022584:menuItem(
1694351022595:text = "Acerca de",
1694351022606:tabName = "about",
1694351022617:icon = icon("info-circle"))
1694351022628:)
1694351022638:),
1694351022651:body = dashboardBody(
1694351022663:tags$style(
1694351022673:type = 'text/css',
1694351022683:'.rt-align-left {color: black!important; }',
1694351022695:'.rt-align-center {color: black!important; }',
1694351022707:'.ReactTable {color: black!important; }',
1694351022721:'.sidebar .shiny-input-container {padding: 0px 21px 0px 16px!important; }',
1694351022735:'.btn-primary {color: #fff!important; background-color: #5d6b7a!important; border-color: #007bff!important; box-shadow: none!important;}',
1694351022755:'.small-box .inner {padding: 12px!important; text-align: center!important; font-size: 37px!important;}'
1694351022768:),
1694351022787:tabItems(
1694351022802:tabItem(
1694351022815:tabName = "dashboard",
1694351022828:h3("Precios Dolar Economia Argentina"),
1694351022840:p("Dashboard sobre el precio del dolar en ",
1694351022853:span("Argentina", style = "color: green;"), paste0(". Datos actualizados hasta: ",today_with_hs)),
1694351022865:fluidRow(
1694351022879:bs4ValueBoxOutput("valuebox_1",width = 4),
1694351022892:bs4ValueBoxOutput("valuebox_2",width = 4),
1694351022905:bs4ValueBoxOutput("valuebox_3",width = 4)
1694351022918:),
1694351022931:fluidRow(
1694351022943:column(
1694351022954:width = 4,
1694351022966:box(
1694351022977:title = "Inputs",
1694351022988:status = "teal",
1694351022999:icon = icon("keyboard"),
1694351023011:solidHeader = TRUE,
1694351023023:width = 12,
1694351023034:tabPanel(
1694351023050:title = "Time Serie",
1694351023063:numericInput(
1694351023074:inputId = "variaciondias",
1694351023085:label = HTML("Dias de Variacion %<br><br>",
1694351023096:"Seleccionar la cantidad de dias para atras para ver la variacion % de los 3 Tipos de Cambio."),
1694351023108:min = 1,
1694351023120:max = 5,
1694351023132:value = 5
1694351023143:),
1694351023154:dateRangeInput(
1694351023165:"daterange3",
1694351023181:label = HTML(
1694351023196:"Rango de Fechas: <br><br>",
1694351023210:"Seleccionar un rango de fechas para ver la variacion del Tipo de Cambio Blue, la Serie Temporal del precio y de la variacion respecto al dia anterior."),
1694351023227:start  = min_date,
1694351023241:end    = max_date,
1694351023255:min    = min_history_date,
1694351023267:max    = max_date,
1694351023279:format = "dd/mm/yyyy",
1694351023292:separator = " - ",
1694351023304:language = "es"
1694351023315:)
1694351023326:)
1694351023337:)
1694351023349:),
1694351023359:column(
1694351023370:width = 8,
1694351023381:box(
1694351023392:title = "Serie Temporal",
1694351023404:width = 12,
1694351023419:status = "teal",
1694351023436:icon = icon("chart-line"),
1694351023446:solidHeader = TRUE,
1694351023457:tabPanel(
1694351023467:title = "Var",
1694351023477:withSpinner(
1694351023486:highchartOutput("timeserie"),
1694351023496:type = 1
1694351023506:)
1694351023516:)
1694351023526:)
1694351023535:),
1694351023547:column(
1694351023559:width = 12,
1694351023570:box(
1694351023583:title = "Variacion Dolar Blue",
1694351023593:width = 12,
1694351023603:status = "teal",
1694351023613:icon = icon("chart-line"),
1694351023624:solidHeader = TRUE,
1694351023634:tabPanel(
1694351023644:title = "Variacion Dolar Blue",
1694351023657:withSpinner(
1694351023667:highchartOutput("varplot"),
1694351023678:type = 1
1694351023688:)
1694351023698:)
1694351023708:)
1694351023718:)
1694351023728:)),
1694351023746:tabItem(
1694351023757:tabName = "brechas",
1694351023769:p("Los colores indican un cambio en la brecha cambiaria respecto al dia anterior.",
1694351023784:span("Rojo", style = "color: red;"), paste0(" indica un incemento de la brecha."),
1694351023802:span("Azul", style = "color: blue;"), paste0(" indica una caida y"),
1694351023817:span(" Verde", style = "color: green;"), paste0(" que permanece constante.")),
1694351023833:fluidRow(
1694351023846:bs4ValueBoxOutput("valuebox_brechas_1",width = 4),
1694351023861:bs4ValueBoxOutput("valuebox_brechas_2",width = 4),
1694351023876:bs4ValueBoxOutput("valuebox_brechas_3",width = 4)
1694351023891:),
1694351023905:fluidRow(
1694351023919:column(12,
1694351023932:tabBox(title = "",
1694351023946:status = "gray",
1694351023958:width = 12,
1694351023970:solidHeader = TRUE,
1694351023982:maximizable = T,
1694351023992:tabPanel(
1694351024003:title = "Blue/Mep",
1694351024015:withSpinner(
1694351024025:highchartOutput("barplot_bluevsmep"))
1694351024039:),
1694351024050:tabPanel(
1694351024061:title = "Mep/Oficial",
1694351024073:withSpinner(
1694351024085:highchartOutput("barplot_mepvsoficial"))
1694351024097:),
1694351024108:tabPanel(
1694351024120:title = "Blue/Oficial",
1694351024130:withSpinner(
1694351024142:highchartOutput("barplot_bluevsoficial"))
1694351024152:)
1694351024163:)
1694351024174:)
1694351024184:)
1694351024196:),
1694351024207:tabItem(
1694351024218:tabName = "datos",
1694351024228:fluidRow(
1694351024239:column(12,
1694351024250:tabBox(
1694351024261:title = "",
1694351024273:status = "gray",
1694351024285:width = 12,
1694351024297:solidHeader = TRUE,
1694351024308:maximizable = T,
1694351024318:tabPanel(
1694351024329:title = "Dolar Blue",
1694351024340:reactable::reactableOutput("table_blue_output")
1694351024351:),
1694351024362:tabPanel(
1694351024374:title = "Dolar Mep",
1694351024392:reactable::reactableOutput("table_mep_output")
1694351024403:),
1694351024413:tabPanel(
1694351024426:title = "Dolar Oficial",
1694351024444:reactable::reactableOutput("table_oficial_output")
1694351024455:)
1694351024469:)
1694351024479:)
1694351024491:)
1694351024502:),
1694351024513:tabItem(
1694351024523:tabName = "about",
1694351024534:h2("Acerca de"),
1694351024545:fluidRow(
1694351024555:box(
1694351024567:title = strong("Dashboard sobre los tipos de cambio en Argentina"), solidHeader = TRUE,
1694351024578:p("Este Dashboard tiene la finalidad de mostrar la variaciÃ³n de los distintos tipos de cambio en  ", strong("Argentina"), "."),
1694351024589:p("Podemos ver las siguientes mÃ©tricas:"),
1694351024601:tags$ol(
1694351024611:tags$li("VariaciÃ³n interanual del tipo de cambio paralelo"),
1694351024622:tags$li("VariaciÃ³n diaria del tipo de cambio paralelo, mep y oficial."),
1694351024633:tags$li("VariaciÃ³n diaria de las brechas cambiarias. Blue vs Mep, Mep vs Oficial y Blue vs Oficial")
1694351024643:),
1694351024654:p("Packages:"),
1694351024665:tags$ul(
1694351024676:tags$li(tags$a(href="https://jkunst.com/highcharter/index.html", "highcharter")),
1694351024688:tags$li(tags$a(href="https://rinterface.github.io/bs4Dash/index.html", "bs4Dash")),
1694351024699:tags$li(tags$a(href="https://dplyr.tidyverse.org/", "dplyr"))
1694351024710:)
1694351024721:),
1694351024733:box(
1694351024747:title = strong("Trabajo hecho por:"), solidHeader = TRUE,
1694351024757:h5("Galoto Maximiliano"),
1694351024767:tags$ul(
1694351024777:tags$li(tags$a(href="https://www.linkedin.com/in/maximilianogaloto", "Linkedin")),
1694351024787:tags$li(tags$a(href="https://github.com/MGaloto", "GitHub")))
1694351024798:)
1694351024808:)
1694351024822:)
1694351024834:)
1694351024849:)
1694351024867:)
1694351024986:# SV ----------------------------------------------------------------------
1694351024996:server <- function(input, output,session) {
1694351025024:dolar = edit_dolar_historico(
1694351025034:read_excel('data/dolar.xlsx') %>%
1694351025044:arrange(Fecha) %>%
1694351025052:select(Fecha,Compra,Venta,Promedio,variacion))
1694351025068:dolarmep= edit_dolar_historico(
1694351025078:read_excel('data/dolarmep.xlsx') %>%
1694351025089:arrange(Fecha) %>%
1694351025101:select(Fecha,Compra,Venta,Promedio,variacion))
1694351025119:dolaroficial=edit_dolar_historico(
1694351025131:read_excel('data/dolaroficial.xlsx') %>%
1694351025143:arrange(Fecha) %>%
1694351025154:select(Fecha,Compra,Venta,Promedio,variacion))
1694351025173:dolarmepcierre = dolarmep$Promedio[nrow(dolarmep)]
1694351025188:dolaroficialcierre = dolaroficial$Promedio[nrow(dolaroficial)]
1694351025199:dolarbluecierre = dolar$Promedio[nrow(dolar)]
1694351025227:mepvsoficial = merge(
1694351025238:na.omit(dolarmep %>% mutate(prommep = Promedio) %>% select(Fecha,prommep)),
1694351025250:na.omit(dolaroficial %>% mutate(promoficial = Promedio) %>% select(Fecha,promoficial)),
1694351025262:by = "Fecha",
1694351025273:all = FALSE
1694351025286:) %>% mutate(
1694351025299:brecha = round((prommep-promoficial) / promoficial,2)*100
1694351025312:) %>% select(Fecha, brecha) %>% arrange(Fecha)
1694351025335:bluevsoficial = merge(
1694351025351:na.omit(dolar %>% mutate(promblue = Promedio) %>% select(Fecha,promblue)),
1694351025362:na.omit(dolaroficial %>% mutate(promoficial = Promedio) %>% select(Fecha,promoficial)),
1694351025375:by = "Fecha",
1694351025388:all = FALSE
1694351025401:) %>% mutate(
1694351025413:brecha = round((promblue-promoficial) / promoficial,2)*100
1694351025426:) %>% select(Fecha, brecha) %>% arrange(Fecha)
1694351025449:bluevsmep = merge(
1694351025461:na.omit(dolar %>% mutate(promblue = Promedio) %>% select(Fecha,promblue)),
1694351025473:na.omit(dolarmep %>% mutate(prommep = Promedio) %>% select(Fecha,prommep)),
1694351025485:by = "Fecha",
1694351025497:all = FALSE
1694351025508:) %>% mutate(
1694351025522:brecha = round((promblue-prommep) / prommep,2)*100
1694351025535:) %>% select(Fecha, brecha) %>% arrange(Fecha)
1694351025554:info_mepvsoficial = get_icon_arrow(mepvsoficial)
1694351025566:info_bluevsoficial = get_icon_arrow(bluevsoficial)
1694351025578:info_bluevsmep = get_icon_arrow(bluevsmep)
1694351025604:rv <- reactiveValues()
1694351025631:observeEvent(input$variaciondias, {
1694351025650:rv$dias_variacion = as.numeric(input$variaciondias)
1694351025663:rv$var_dolar_blue = get_dolar_var(dolar, rv$dias_variacion)
1694351025673:rv$var_dolar_oficial = get_dolar_var(dolaroficial, rv$dias_variacion)
1694351025685:rv$var_dolar_mep = get_dolar_var(dolarmep, rv$dias_variacion)
1694351025705:}, ignoreNULL = FALSE)
1694351025724:output$table_blue_output <- reactable::renderReactable({
1694351025736:get_table(dolar)
1694351025755:})
1694351025766:output$table_mep_output <- reactable::renderReactable({
1694351025776:get_table(dolarmep)
1694351025796:})
1694351025808:output$table_oficial_output <- reactable::renderReactable({
1694351025818:get_table(dolaroficial)
1694351025837:})
1694351025882:output$varplot <- renderHighchart({
1694351025908:date_from = get_date(dolar,as.Date(input$daterange3[1]))
1694351025920:date_to = get_date(dolar,as.Date(input$daterange3[2]))
1694351025945:highcharter::hchart(
1694351025957:dolar %>%
1694351025969:filter(Fecha >= date_from,
1694351025981:Fecha <= date_to) %>%
1694351025992:select(Fecha, variacion),
1694351026005:type = "line",
1694351026017:highcharter::hcaes(x = "Fecha", y = "variacion"),
1694351026027:color = "#007bff",
1694351026037:name = "ver",
1694351026046:id = "trend",
1694351026056:showInLegend = TRUE) %>%
1694351026066:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Variacion: {point.y}%") %>%
1694351026083:highcharter::hc_plotOptions(
1694351026094:line = list(
1694351026106:color = "blue",
1694351026118:marker = list(
1694351026129:fillColor = "white",
1694351026140:lineWidth = 2,
1694351026151:radius=1,
1694351026162:lineColor = NULL
1694351026172:)
1694351026183:)
1694351026193:) %>%
1694351026203:highcharter::hc_legend(enabled = FALSE) %>%
1694351026211:highcharter::hc_xAxis(
1694351026221:title = list(text = ""),
1694351026231:gridLineWidth = 0,
1694351026240:dateTimeLabelFormats = list(day = '%Y'),
1694351026251:type = "datetime",
1694351026260:reversed = FALSE,
1694351026270:labels = list(
1694351026279:style = list(color = "black", fontWeight = "bold")
1694351026289:)
1694351026301:) %>%
1694351026313:highcharter::hc_yAxis(
1694351026323:title = list(text = "%",
1694351026332:style = list(color = "black", fontWeight = "bold")),
1694351026341:gridLineWidth = 0,
1694351026356:reversed = FALSE,
1694351026370:labels = list(
1694351026384:style = list(color = "black", fontWeight = "bold")
1694351026395:)
1694351026406:) %>%
1694351026427:highcharter::hc_caption(
1694351026438:text = paste0("Variacion del Dolar Blue"),
1694351026450:style = list(fontSize = '12px', fontWeight = 'bold', color = "black")) %>%
1694351026460:highcharter::hc_tooltip(
1694351026471:crosshairs = TRUE,
1694351026482:backgroundColor = "#F0F0F0",
1694351026493:shared = TRUE,
1694351026505:borderWidth = 5
1694351026516:) %>%
1694351026528:hc_title(
1694351026540:text = paste0('Dolar Blue Variacion Argentina'),
1694351026552:style = list(fontSize = '16px', fontWeight = 'bold', color = "black"))
1694351026563:})
1694351026607:output$timeserie <- renderHighchart({
1694351026625:highcharter::hchart(
1694351026636:dolar %>%
1694351026647:filter(Fecha >= as.Date(input$daterange3[1]), Fecha <= as.Date(input$daterange3[2])) %>%
1694351026657:select(Fecha, Promedio),
1694351026669:type = "line",
1694351026680:highcharter::hcaes(x = "Fecha", y = "Promedio"),
1694351026691:color = "#007bff",
1694351026701:name = "ver",
1694351026712:id = "trend",
1694351026723:showInLegend = TRUE) %>%
1694351026734:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Dolar Blue: ${point.y}") %>%
1694351026753:highcharter::hc_plotOptions(
1694351026764:line = list(
1694351026775:color = "blue",
1694351026785:marker = list(
1694351026796:fillColor = "white",
1694351026807:lineWidth = 2,
1694351026818:radius=1,
1694351026829:lineColor = NULL
1694351026841:)
1694351026853:)
1694351026863:) %>%
1694351026873:highcharter::hc_legend(enabled = FALSE) %>%
1694351026883:highcharter::hc_xAxis(
1694351026893:title = list(text = ""),
1694351026905:gridLineWidth = 0,
1694351026919:dateTimeLabelFormats = list(day = '%Y'),
1694351026932:type = "datetime",
1694351026950:reversed = FALSE,
1694351026964:labels = list(
1694351026978:style = list(color = "black", fontWeight = "bold")
1694351026993:)
1694351027007:) %>%
1694351027022:highcharter::hc_yAxis(
1694351027035:title = list(text = "Precio",
1694351027049:style = list(color = "black", fontWeight = "bold")),
1694351027063:gridLineWidth = 0,
1694351027077:reversed = FALSE,
1694351027094:labels = list(
1694351027108:style = list(color = "black", fontWeight = "bold")
1694351027121:)
1694351027134:) %>%
1694351027157:highcharter::hc_caption(
1694351027170:text = paste0("Serie Temporal del Dolar Paralelo."),
1694351027182:style = list(fontSize = '12px', fontWeight = 'bold', color = "black")) %>%
1694351027198:highcharter::hc_tooltip(
1694351027209:crosshairs = TRUE,
1694351027221:backgroundColor = "#F0F0F0",
1694351027232:shared = TRUE,
1694351027244:borderWidth = 5
1694351027255:) %>%
1694351027267:hc_title(
1694351027279:text = paste0('Dolar Paralelo Argentina'),
1694351027290:style = list(fontSize = '16px', fontWeight = 'bold', color = "black"))
1694351027301:})
1694351027329:output$barplot_mepvsoficial <- renderHighchart({
1694351027348:highchart() %>%
1694351027360:hc_chart(type = "column") %>%
1694351027372:hc_title(text = "Brecha Dolar Mep vs Oficial") %>%
1694351027383:hc_xAxis(categories = mepvsoficial$Fecha) %>%
1694351027395:hc_yAxis(title = list(text = "Brecha")) %>%
1694351027407:hc_add_series(name = "brecha",
1694351027419:data = mepvsoficial$brecha,
1694351027431:color = "#007bff") %>%
1694351027443:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Brecha: % {point.y}") %>%
1694351027456:highcharter::hc_legend(enabled = FALSE) %>%
1694351027467:highcharter::hc_xAxis(
1694351027479:title = list(text = ""),
1694351027491:reversed = FALSE,
1694351027502:labels = list(
1694351027513:style = list(color = "black", fontWeight = "bold")
1694351027525:)
1694351027538:) %>%
1694351027549:highcharter::hc_yAxis(
1694351027561:title = list(text = "% Brecha",
1694351027572:style = list(color = "black", fontWeight = "bold")),
1694351027587:gridLineWidth = 0,
1694351027601:reversed = FALSE,
1694351027613:labels = list(
1694351027624:style = list(color = "black", fontWeight = "bold")
1694351027637:)
1694351027648:) %>%
1694351027668:highcharter::hc_caption(
1694351027680:text = paste0("Brecha Mep vs Oficial."),
1694351027692:style = list(fontSize = '12px', fontWeight = 'bold', color = "black")) %>%
1694351027703:highcharter::hc_tooltip(
1694351027714:crosshairs = TRUE,
1694351027727:backgroundColor = "#F0F0F0",
1694351027739:shared = TRUE,
1694351027753:borderWidth = 5
1694351027768:) %>%
1694351027784:hc_title(
1694351027799:text = paste0('Brecha Cambiaria.'),
1694351027811:style = list(fontSize = '16px', fontWeight = 'bold', color = "black"))
1694351027841:})
1694351027872:output$barplot_bluevsoficial <- renderHighchart({
1694351027895:highchart() %>%
1694351027907:hc_chart(type = "column") %>%
1694351027919:hc_title(text = "Brecha Dolar Blue vs Oficial") %>%
1694351027932:hc_xAxis(categories = bluevsoficial$Fecha) %>%
1694351027944:hc_yAxis(title = list(text = "Brecha")) %>%
1694351027956:hc_add_series(name = "brecha",
1694351027970:data = bluevsoficial$brecha,
1694351027986:color = "#007bff") %>%
1694351028004:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Brecha: % {point.y}") %>%
1694351028025:highcharter::hc_legend(enabled = FALSE) %>%
1694351028044:highcharter::hc_xAxis(
1694351028058:title = list(text = ""),
1694351028073:reversed = FALSE,
1694351028087:labels = list(
1694351028100:style = list(color = "black", fontWeight = "bold")
1694351028114:)
1694351028127:) %>%
1694351028140:highcharter::hc_yAxis(
1694351028154:title = list(text = "% Brecha",
1694351028167:style = list(color = "black", fontWeight = "bold")),
1694351028181:gridLineWidth = 0,
1694351028195:reversed = FALSE,
1694351028207:labels = list(
1694351028223:style = list(color = "black", fontWeight = "bold")
1694351028236:)
1694351028259:) %>%
1694351028280:highcharter::hc_caption(
1694351028292:text = paste0("Brecha Blue vs Oficial."),
1694351028303:style = list(fontSize = '12px', fontWeight = 'bold', color = "black")) %>%
1694351028316:highcharter::hc_tooltip(
1694351028326:crosshairs = TRUE,
1694351028336:backgroundColor = "#F0F0F0",
1694351028345:shared = TRUE,
1694351028356:borderWidth = 5
1694351028366:) %>%
1694351028376:hc_title(
1694351028386:text = paste0('Brecha Cambiaria.'),
1694351028396:style = list(fontSize = '16px', fontWeight = 'bold', color = "black"))
1694351028423:})
1694351028457:output$barplot_bluevsmep <- renderHighchart({
1694351028478:highchart() %>%
1694351028490:hc_chart(type = "column") %>%
1694351028504:hc_title(text = "Brecha Dolar Blue vs Mep") %>%
1694351028521:hc_xAxis(categories = bluevsmep$Fecha) %>%
1694351028532:hc_yAxis(title = list(text = "Brecha")) %>%
1694351028543:hc_add_series(name = "brecha",
1694351028554:data = bluevsmep$brecha,
1694351028565:color = "#007bff") %>%
1694351028576:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Brecha: % {point.y}") %>%
1694351028587:highcharter::hc_legend(enabled = FALSE) %>%
1694351028598:highcharter::hc_xAxis(
1694351028608:title = list(text = ""),
1694351028619:reversed = FALSE,
1694351028630:labels = list(
1694351028641:style = list(color = "black", fontWeight = "bold")
1694351028651:)
1694351028662:) %>%
1694351028673:highcharter::hc_yAxis(
1694351028683:title = list(text = "% Brecha",
1694351028694:style = list(color = "black", fontWeight = "bold")),
1694351028703:gridLineWidth = 0,
1694351028714:reversed = FALSE,
1694351028724:labels = list(
1694351028735:style = list(color = "black", fontWeight = "bold")
1694351028745:)
1694351028756:) %>%
1694351028774:highcharter::hc_caption(
1694351028785:text = paste0("Brecha Blue vs Mep"),
1694351028796:style = list(fontSize = '12px', fontWeight = 'bold', color = "black")) %>%
1694351028807:highcharter::hc_tooltip(
1694351028818:crosshairs = TRUE,
1694351028829:backgroundColor = "#F0F0F0",
1694351028841:shared = TRUE,
1694351028852:borderWidth = 5
1694351028863:) %>%
1694351028874:hc_title(
1694351028885:text = paste0('Brecha Cambiaria.'),
1694351028897:style = list(fontSize = '16px', fontWeight = 'bold', color = "black"))
1694351028923:})
1694351028978:output$valuebox_1 <- renderbs4ValueBox({
1694351028997:bs4ValueBox(
1694351029011:value = "",
1694351029026:subtitle = HTML(
1694351029044:"Blue: $", as.character(dolarbluecierre),"<br>",
1694351029058:"Mep: $", as.character(dolarmepcierre),"<br>",
1694351029073:"Oficial: $", as.character(dolaroficialcierre)),
1694351029089:icon = icon("dollar-sign"),
1694351029103:color = "teal",
1694351029115:width = 3,
1694351029127:footer = div(paste0("Precios al ",today))
1694351029139:)
1694351029152:})
1694351029173:output$valuebox_3 <- renderbs4ValueBox({
1694351029194:bs4ValueBox(
1694351029205:value = paste0(
1694351029217:as.character(
1694351029228:get_dolar_interanual_input(
1694351029239:dolar, input$daterange3[1], input$daterange3[2]
1694351029250:)
1694351029261:), " %"),
1694351029273:subtitle = paste0("Variacion % Dolar Blue"),
1694351029285:icon = icon("info"),
1694351029296:color = "teal",
1694351029307:width = 3,
1694351029318:footer = div(
1694351029329:paste0(
1694351029340:"De: ", input$daterange3[1],
1694351029351:" a: ",input$daterange3[2]
1694351029363:)
1694351029375:)
1694351029386:)
1694351029405:})
1694351029433:output$valuebox_2 <- renderbs4ValueBox({
1694351029452:bs4ValueBox(
1694351029462:value = "",
1694351029474:subtitle = HTML(
1694351029485:"Blue: ", as.character(rv$var_dolar_blue)," %<br>",
1694351029496:"Mep: ", as.character(rv$var_dolar_mep)," %<br>",
1694351029509:"Oficial: ", as.character(rv$var_dolar_oficial)," %"),
1694351029522:icon = icon("coins"),
1694351029535:color = "teal",
1694351029546:width = 3,
1694351029557:footer = div(paste0("Variacion % Ultimos ", as.character(rv$dias_variacion) ," dias"))
1694351029568:)
1694351029578:})
1694351029625:output$valuebox_brechas_1 <- renderbs4ValueBox({
1694351029637:bs4ValueBox(
1694351029649:value = paste0(
1694351029662:as.character(
1694351029674:bluevsmep$brecha[nrow(bluevsmep)]
1694351029687:), " %"),
1694351029698:subtitle = paste0("Brecha Blue vs Mep"),
1694351029711:icon = icon(info_bluevsmep[2]),
1694351029723:color = info_bluevsmep[1],
1694351029735:width = 3,
1694351029747:footer = div(
1694351029759:paste0(
1694351029770:max(bluevsmep$Fecha)
1694351029782:)
1694351029795:)
1694351029807:)
1694351029819:})
1694351029839:output$valuebox_brechas_2 <- renderbs4ValueBox({
1694351029851:bs4ValueBox(
1694351029864:value = paste0(
1694351029877:as.character(
1694351029889:mepvsoficial$brecha[nrow(mepvsoficial)]
1694351029901:), " %"),
1694351029913:subtitle = paste0("Brecha Mep vs Oficial"),
1694351029925:icon = icon(info_mepvsoficial[2]),
1694351029937:color = info_mepvsoficial[1],
1694351029950:width = 3,
1694351029963:footer = div(
1694351029974:paste0(
1694351029987:max(mepvsoficial$Fecha)
1694351030006:)
1694351030019:)
1694351030033:)
1694351030046:})
1694351030079:output$valuebox_brechas_3 <- renderbs4ValueBox({
1694351030098:bs4ValueBox(
1694351030114:value = paste0(
1694351030130:as.character(
1694351030146:bluevsoficial$brecha[nrow(bluevsoficial)]
1694351030161:), " %"),
1694351030174:subtitle = paste0("Brecha Blue vs Oficial"),
1694351030188:icon = icon(info_bluevsoficial[2]),
1694351030202:color = info_bluevsoficial[1],
1694351030216:width = 3,
1694351030230:footer = div(
1694351030246:paste0(
1694351030261:max(bluevsoficial$Fecha)
1694351030275:)
1694351030287:)
1694351030298:)
1694351030314:})
1694351030345:}
1694351030366:shinyApp(ui = ui, server = server)
1694351058654:library(bs4Dash)
1694351058665:library(tidyverse)
1694351058677:library(dplyr)
1694351058686:library(shinycssloaders)
1694351058697:library(waiter)
1694351058707:library(readxl)
1694351058717:library(highcharter)
1694351058728:library(shiny)
1694351058739:library(lubridate)
1694351058750:library(reactable)
1694351058769:library(htmltools)
1694351058799:today = format(
1694351058806:with_tz(
1694351058814:Sys.time() ,
1694351058824:tzone = "America/Argentina/Buenos_Aires"),
1694351058833:format = "%Y-%m-%d"
1694351058840:)
1694351058854:today_with_hs = format(
1694351058863:with_tz(
1694351058873:Sys.time() ,
1694351058882:tzone = "America/Argentina/Buenos_Aires"),
1694351058890:format = "%Y-%m-%d %H:%M"
1694351058898:)
1694351058919:edit_dolar_historico = function(df){
1694351058928:return(
1694351058936:df %>% mutate(
1694351058945:Fecha = as.Date(Fecha, format = "%d/%m/%Y"),
1694351058952:Compra = round(as.numeric(Compra),2),
1694351058961:Venta = round(as.numeric(Venta),2),
1694351058977:Promedio = round(as.numeric(Promedio),2),
1694351058986:variacion = round(as.numeric(variacion),2)
1694351058995:))
1694351059003:}
1694351059016:packageVersion("cli")
1694351059033:get_date_interanual = function(df){
1694351059041:fecha_max = max(df$Fecha)
1694351059050:fecha_before = as.Date(fecha_max) - years(1)
1694351059058:while (TRUE) {
1694351059066:dolar_before = df$Promedio[df$Fecha == fecha_before]
1694351059074:if (length(dolar_before) > 0) {
1694351059082:break
1694351059091:} else {
1694351059099:fecha_before = fecha_before - 1
1694351059106:}
1694351059116:}
1694351059124:return(as.Date(fecha_before))
1694351059132:}
1694351059147:df = edit_dolar_historico(read_excel('data/dolar.xlsx') %>%
1694351059155:select(Fecha,Compra,Venta,Promedio,variacion)) %>% arrange(Fecha)
1694351059366:max_date = max(df$Fecha)
1694351059378:min_history_date = min(df$Fecha)
1694351059391:min_date = get_date_interanual(df)
1694351059456:get_dolar_interanual = function(df){
1694351059464:fecha_max = max(df$Fecha)
1694351059472:fecha_before = as.Date(fecha_max) - years(1)
1694351059480:while (TRUE) {
1694351059488:dolar_before = df$Promedio[df$Fecha == fecha_before]
1694351059496:if (length(dolar_before) > 0) {
1694351059504:break
1694351059515:} else {
1694351059524:fecha_before = fecha_before - 1
1694351059533:}
1694351059541:}
1694351059549:dolar_actual = df$Promedio[nrow(df)]
1694351059557:interanual_rate = round(((dolar_actual-dolar_before)/dolar_before)*100,2)
1694351059564:return(interanual_rate)
1694351059571:}
1694351059591:get_dolar_interanual_input = function(df, date_min, date_max){
1694351059598:fecha_max = as.Date(date_max)
1694351059606:fecha_before = as.Date(date_min)
1694351059614:while (TRUE) {
1694351059622:dolar_before = df$Promedio[df$Fecha == fecha_before]
1694351059631:if (length(dolar_before) > 0) {
1694351059638:break
1694351059646:} else {
1694351059654:fecha_before = fecha_before - 1
1694351059662:}
1694351059670:}
1694351059678:while (TRUE) {
1694351059686:dolar_actual = df$Promedio[df$Fecha == fecha_max]
1694351059695:if (length(dolar_actual) > 0) {
1694351059702:break
1694351059713:} else {
1694351059725:fecha_max = fecha_max - 1
1694351059738:}
1694351059750:}
1694351059761:interanual_rate = round(((dolar_actual-dolar_before)/dolar_before)*100,2)
1694351059772:return(interanual_rate)
1694351059782:}
1694351059811:get_dolar_var = function(df, dias){
1694351059821:return(
1694351059830:round((df$Promedio[df$Fecha==max(df$Fecha)] -
1694351059840:df$Promedio[nrow(df) - dias]) /
1694351059849:df$Promedio[nrow(df) - dias],4)*100
1694351059858:)
1694351059867:}
1694351059884:get_icon_arrow = function(df){
1694351059897:actual_value = round(df$brecha[nrow(df)],2)
1694351059907:before_value = round(df$brecha[nrow(df)-1],2)
1694351059917:if (actual_value > before_value){
1694351059927:return(
1694351059937:c("danger", "arrow-up")
1694351059946:)
1694351059955:} else if (actual_value < before_value) {
1694351059964:return(
1694351059975:c("primary", "arrow-down")
1694351059985:)
1694351059995:} else {
1694351060004:c("teal","equals")
1694351060014:}
1694351060028:}
1694351060058:get_table = function(df){
1694351060068:return(
1694351060078:reactable::reactable(
1694351060087:na.omit(df) %>% arrange(desc(Fecha)),
1694351060097:columns = list(
1694351060106:Fecha = colDef(
1694351060117:name = "Fecha",
1694351060127:align = "center",
1694351060137:minWidth = 120
1694351060149:),
1694351060160:Compra = colDef(
1694351060169:name = "Compra",
1694351060178:align = "center",
1694351060187:minWidth = 60
1694351060195:),
1694351060205:Venta = colDef(
1694351060216:name = "Venta",
1694351060227:align = "left",
1694351060239:minWidth = 60
1694351060250:),
1694351060258:Promedio = colDef(
1694351060271:name = "Promedio",
1694351060287:align = "left",
1694351060307:minWidth = 60
1694351060325:),
1694351060338:variacion = colDef(
1694351060352:name = "variacion",
1694351060365:align = "left",
1694351060381:minWidth = 60
1694351060393:)
1694351060404:),
1694351060415:searchable = TRUE,
1694351060426:striped = TRUE,
1694351060438:defaultPageSize = 8)
1694351060449:)
1694351060461:}
1694351060502:get_date = function(df, date){
1694351060513:fecha = as.Date(date)
1694351060523:while (TRUE) {
1694351060533:dolar = df$Promedio[df$Fecha == fecha]
1694351060543:if (length(dolar) > 0) {
1694351060554:break
1694351060564:} else {
1694351060574:fecha = fecha - 1
1694351060584:}
1694351060595:}
1694351060606:return(as.Date(fecha))
1694351060617:}
1694351060642:ui <- dashboardPage(
1694351060652:options = F,
1694351060663:header = dashboardHeader(
1694351060674:skin = "dark",
1694351060685:fixed = T,
1694351060695:title = dashboardBrand(
1694351060705:title ="Dolar Argentina",
1694351060715:image = "https://w7.pngwing.com/pngs/563/791/png-transparent-dollar-sign-illustration-united-states-dollar-icon-design-icon-dollar-sign-text-logo-number.png")
1694351060725:),
1694351060735:sidebar = dashboardSidebar(
1694351060745:background = "lightgray",
1694351060756:background_dark = "darkgray",
1694351060767:skin = "light",
1694351060778:width = 500,
1694351060789:sidebarMenu(
1694351060800:menuItem(
1694351060810:text = "Principal",
1694351060820:tabName = "dashboard",
1694351060831:startExpanded = T,
1694351060841:icon = icon("home")
1694351060852:),
1694351060862:menuItem(
1694351060873:text = "Brechas",
1694351060884:tabName = "brechas",
1694351060894:startExpanded = T,
1694351060904:icon = icon("chart-bar")
1694351060915:),
1694351060926:menuItem(
1694351060935:text = "Datos",
1694351060949:tabName = "datos",
1694351060959:startExpanded = T,
1694351060969:icon = icon("database")
1694351060978:),
1694351060988:menuItem(
1694351060999:text = "Acerca de",
1694351061009:tabName = "about",
1694351061018:icon = icon("info-circle"))
1694351061029:)
1694351061039:),
1694351061050:body = dashboardBody(
1694351061060:tags$style(
1694351061070:type = 'text/css',
1694351061080:'.rt-align-left {color: black!important; }',
1694351061090:'.rt-align-center {color: black!important; }',
1694351061099:'.ReactTable {color: black!important; }',
1694351061110:'.sidebar .shiny-input-container {padding: 0px 21px 0px 16px!important; }',
1694351061120:'.btn-primary {color: #fff!important; background-color: #5d6b7a!important; border-color: #007bff!important; box-shadow: none!important;}',
1694351061130:'.small-box .inner {padding: 12px!important; text-align: center!important; font-size: 37px!important;}'
1694351061139:),
1694351061150:tabItems(
1694351061159:tabItem(
1694351061169:tabName = "dashboard",
1694351061178:h3("Precios Dolar Economia Argentina"),
1694351061189:p("Dashboard sobre el precio del dolar en ",
1694351061199:span("Argentina", style = "color: green;"), paste0(". Datos actualizados hasta: ",today_with_hs)),
1694351061210:fluidRow(
1694351061220:bs4ValueBoxOutput("valuebox_1",width = 4),
1694351061232:bs4ValueBoxOutput("valuebox_2",width = 4),
1694351061243:bs4ValueBoxOutput("valuebox_3",width = 4)
1694351061254:),
1694351061266:fluidRow(
1694351061277:column(
1694351061288:width = 4,
1694351061315:box(
1694351061332:title = "Inputs",
1694351061349:status = "teal",
1694351061366:icon = icon("keyboard"),
1694351061381:solidHeader = TRUE,
1694351061394:width = 12,
1694351061407:tabPanel(
1694351061421:title = "Time Serie",
1694351061435:numericInput(
1694351061448:inputId = "variaciondias",
1694351061460:label = HTML("Dias de Variacion %<br><br>",
1694351061472:"Seleccionar la cantidad de dias para atras para ver la variacion % de los 3 Tipos de Cambio."),
1694351061484:min = 1,
1694351061497:max = 5,
1694351061511:value = 5
1694351061523:),
1694351061534:dateRangeInput(
1694351061545:"daterange3",
1694351061556:label = HTML(
1694351061566:"Rango de Fechas: <br><br>",
1694351061577:"Seleccionar un rango de fechas para ver la variacion del Tipo de Cambio Blue, la Serie Temporal del precio y de la variacion respecto al dia anterior."),
1694351061588:start  = min_date,
1694351061603:end    = max_date,
1694351061614:min    = min_history_date,
1694351061625:max    = max_date,
1694351061636:format = "dd/mm/yyyy",
1694351061647:separator = " - ",
1694351061658:language = "es"
1694351061669:)
1694351061679:)
1694351061692:)
1694351061703:),
1694351061714:column(
1694351061726:width = 8,
1694351061739:box(
1694351061754:title = "Serie Temporal",
1694351061766:width = 12,
1694351061776:status = "teal",
1694351061788:icon = icon("chart-line"),
1694351061800:solidHeader = TRUE,
1694351061812:tabPanel(
1694351061824:title = "Var",
1694351061836:withSpinner(
1694351061845:highchartOutput("timeserie"),
1694351061856:type = 1
1694351061866:)
1694351061874:)
1694351061883:)
1694351061893:),
1694351061902:column(
1694351061911:width = 12,
1694351061920:box(
1694351061929:title = "Variacion Dolar Blue",
1694351061938:width = 12,
1694351061947:status = "teal",
1694351061960:icon = icon("chart-line"),
1694351061971:solidHeader = TRUE,
1694351061986:tabPanel(
1694351061998:title = "Variacion Dolar Blue",
1694351062010:withSpinner(
1694351062023:highchartOutput("varplot"),
1694351062036:type = 1
1694351062049:)
1694351062062:)
1694351062075:)
1694351062087:)
1694351062101:)),
1694351062121:tabItem(
1694351062134:tabName = "brechas",
1694351062145:p("Los colores indican un cambio en la brecha cambiaria respecto al dia anterior.",
1694351062157:span("Rojo", style = "color: red;"), paste0(" indica un incemento de la brecha."),
1694351062169:span("Azul", style = "color: blue;"), paste0(" indica una caida y"),
1694351062179:span(" Verde", style = "color: green;"), paste0(" que permanece constante.")),
1694351062189:fluidRow(
1694351062208:bs4ValueBoxOutput("valuebox_brechas_1",width = 4),
1694351062218:bs4ValueBoxOutput("valuebox_brechas_2",width = 4),
1694351062228:bs4ValueBoxOutput("valuebox_brechas_3",width = 4)
1694351062238:),
1694351062252:fluidRow(
1694351062262:column(12,
1694351062271:tabBox(title = "",
1694351062282:status = "gray",
1694351062292:width = 12,
1694351062302:solidHeader = TRUE,
1694351062313:maximizable = T,
1694351062323:tabPanel(
1694351062336:title = "Blue/Mep",
1694351062351:withSpinner(
1694351062368:highchartOutput("barplot_bluevsmep"))
1694351062387:),
1694351062412:tabPanel(
1694351062429:title = "Mep/Oficial",
1694351062445:withSpinner(
1694351062459:highchartOutput("barplot_mepvsoficial"))
1694351062473:),
1694351062487:tabPanel(
1694351062499:title = "Blue/Oficial",
1694351062513:withSpinner(
1694351062526:highchartOutput("barplot_bluevsoficial"))
1694351062539:)
1694351062551:)
1694351062562:)
1694351062572:)
1694351062584:),
1694351062605:tabItem(
1694351062617:tabName = "datos",
1694351062628:fluidRow(
1694351062638:column(12,
1694351062649:tabBox(
1694351062660:title = "",
1694351062670:status = "gray",
1694351062681:width = 12,
1694351062692:solidHeader = TRUE,
1694351062702:maximizable = T,
1694351062713:tabPanel(
1694351062724:title = "Dolar Blue",
1694351062734:reactable::reactableOutput("table_blue_output")
1694351062744:),
1694351062753:tabPanel(
1694351062763:title = "Dolar Mep",
1694351062780:reactable::reactableOutput("table_mep_output")
1694351062791:),
1694351062801:tabPanel(
1694351062811:title = "Dolar Oficial",
1694351062829:reactable::reactableOutput("table_oficial_output")
1694351062841:)
1694351062853:)
1694351062865:)
1694351062877:)
1694351062886:),
1694351062896:tabItem(
1694351062907:tabName = "about",
1694351062917:h2("Acerca de"),
1694351062926:fluidRow(
1694351062935:box(
1694351062945:title = strong("Dashboard sobre los tipos de cambio en Argentina"), solidHeader = TRUE,
1694351062954:p("Este Dashboard tiene la finalidad de mostrar la variaciÃ³n de los distintos tipos de cambio en  ", strong("Argentina"), "."),
1694351062965:p("Podemos ver las siguientes mÃ©tricas:"),
1694351062975:tags$ol(
1694351062985:tags$li("VariaciÃ³n interanual del tipo de cambio paralelo"),
1694351062996:tags$li("VariaciÃ³n diaria del tipo de cambio paralelo, mep y oficial."),
1694351063006:tags$li("VariaciÃ³n diaria de las brechas cambiarias. Blue vs Mep, Mep vs Oficial y Blue vs Oficial")
1694351063016:),
1694351063026:p("Packages:"),
1694351063036:tags$ul(
1694351063046:tags$li(tags$a(href="https://jkunst.com/highcharter/index.html", "highcharter")),
1694351063056:tags$li(tags$a(href="https://rinterface.github.io/bs4Dash/index.html", "bs4Dash")),
1694351063067:tags$li(tags$a(href="https://dplyr.tidyverse.org/", "dplyr"))
1694351063077:)
1694351063087:),
1694351063096:box(
1694351063108:title = strong("Trabajo hecho por:"), solidHeader = TRUE,
1694351063118:h5("Galoto Maximiliano"),
1694351063128:tags$ul(
1694351063138:tags$li(tags$a(href="https://www.linkedin.com/in/maximilianogaloto", "Linkedin")),
1694351063149:tags$li(tags$a(href="https://github.com/MGaloto", "GitHub")))
1694351063161:)
1694351063172:)
1694351063185:)
1694351063197:)
1694351063210:)
1694351063223:)
1694351063643:# SV ----------------------------------------------------------------------
1694351063654:server <- function(input, output,session) {
1694351063696:dolar = edit_dolar_historico(
1694351063708:read_excel('data/dolar.xlsx') %>%
1694351063718:arrange(Fecha) %>%
1694351063729:select(Fecha,Compra,Venta,Promedio,variacion))
1694351063748:dolarmep= edit_dolar_historico(
1694351063759:read_excel('data/dolarmep.xlsx') %>%
1694351063770:arrange(Fecha) %>%
1694351063781:select(Fecha,Compra,Venta,Promedio,variacion))
1694351063804:dolaroficial=edit_dolar_historico(
1694351063816:read_excel('data/dolaroficial.xlsx') %>%
1694351063825:arrange(Fecha) %>%
1694351063838:select(Fecha,Compra,Venta,Promedio,variacion))
1694351063867:dolarmepcierre = dolarmep$Promedio[nrow(dolarmep)]
1694351063883:dolaroficialcierre = dolaroficial$Promedio[nrow(dolaroficial)]
1694351063899:dolarbluecierre = dolar$Promedio[nrow(dolar)]
1694351063924:mepvsoficial = merge(
1694351063935:na.omit(dolarmep %>% mutate(prommep = Promedio) %>% select(Fecha,prommep)),
1694351063947:na.omit(dolaroficial %>% mutate(promoficial = Promedio) %>% select(Fecha,promoficial)),
1694351063963:by = "Fecha",
1694351063974:all = FALSE
1694351063986:) %>% mutate(
1694351063996:brecha = round((prommep-promoficial) / promoficial,2)*100
1694351064007:) %>% select(Fecha, brecha) %>% arrange(Fecha)
1694351064026:bluevsoficial = merge(
1694351064035:na.omit(dolar %>% mutate(promblue = Promedio) %>% select(Fecha,promblue)),
1694351064045:na.omit(dolaroficial %>% mutate(promoficial = Promedio) %>% select(Fecha,promoficial)),
1694351064056:by = "Fecha",
1694351064067:all = FALSE
1694351064077:) %>% mutate(
1694351064086:brecha = round((promblue-promoficial) / promoficial,2)*100
1694351064095:) %>% select(Fecha, brecha) %>% arrange(Fecha)
1694351064114:bluevsmep = merge(
1694351064127:na.omit(dolar %>% mutate(promblue = Promedio) %>% select(Fecha,promblue)),
1694351064137:na.omit(dolarmep %>% mutate(prommep = Promedio) %>% select(Fecha,prommep)),
1694351064146:by = "Fecha",
1694351064155:all = FALSE
1694351064164:) %>% mutate(
1694351064173:brecha = round((promblue-prommep) / prommep,2)*100
1694351064182:) %>% select(Fecha, brecha) %>% arrange(Fecha)
1694351064200:info_mepvsoficial = get_icon_arrow(mepvsoficial)
1694351064210:info_bluevsoficial = get_icon_arrow(bluevsoficial)
1694351064219:info_bluevsmep = get_icon_arrow(bluevsmep)
1694351064244:rv <- reactiveValues()
1694351064269:observeEvent(input$variaciondias, {
1694351064286:rv$dias_variacion = as.numeric(input$variaciondias)
1694351064297:rv$var_dolar_blue = get_dolar_var(dolar, rv$dias_variacion)
1694351064307:rv$var_dolar_oficial = get_dolar_var(dolaroficial, rv$dias_variacion)
1694351064318:rv$var_dolar_mep = get_dolar_var(dolarmep, rv$dias_variacion)
1694351064336:}, ignoreNULL = FALSE)
1694351064355:output$table_blue_output <- reactable::renderReactable({
1694351064367:get_table(dolar)
1694351064390:})
1694351064405:output$table_mep_output <- reactable::renderReactable({
1694351064422:get_table(dolarmep)
1694351064447:})
1694351064462:output$table_oficial_output <- reactable::renderReactable({
1694351064477:get_table(dolaroficial)
1694351064500:})
1694351064537:output$varplot <- renderHighchart({
1694351064556:date_from = get_date(dolar,as.Date(input$daterange3[1]))
1694351064568:date_to = get_date(dolar,as.Date(input$daterange3[2]))
1694351064586:highcharter::hchart(
1694351064595:dolar %>%
1694351064604:filter(Fecha >= date_from,
1694351064614:Fecha <= date_to) %>%
1694351064624:select(Fecha, variacion),
1694351064634:type = "line",
1694351064643:highcharter::hcaes(x = "Fecha", y = "variacion"),
1694351064654:color = "#007bff",
1694351064664:name = "ver",
1694351064672:id = "trend",
1694351064682:showInLegend = TRUE) %>%
1694351064691:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Variacion: {point.y}%") %>%
1694351064709:highcharter::hc_plotOptions(
1694351064718:line = list(
1694351064728:color = "blue",
1694351064737:marker = list(
1694351064747:fillColor = "white",
1694351064757:lineWidth = 2,
1694351064768:radius=1,
1694351064777:lineColor = NULL
1694351064786:)
1694351064796:)
1694351064805:) %>%
1694351064813:highcharter::hc_legend(enabled = FALSE) %>%
1694351064823:highcharter::hc_xAxis(
1694351064833:title = list(text = ""),
1694351064844:gridLineWidth = 0,
1694351064853:dateTimeLabelFormats = list(day = '%Y'),
1694351064861:type = "datetime",
1694351064869:reversed = FALSE,
1694351064877:labels = list(
1694351064887:style = list(color = "black", fontWeight = "bold")
1694351064897:)
1694351064908:) %>%
1694351064919:highcharter::hc_yAxis(
1694351064930:title = list(text = "%",
1694351064940:style = list(color = "black", fontWeight = "bold")),
1694351064949:gridLineWidth = 0,
1694351064958:reversed = FALSE,
1694351064967:labels = list(
1694351064976:style = list(color = "black", fontWeight = "bold")
1694351064987:)
1694351064996:) %>%
1694351065010:highcharter::hc_caption(
1694351065020:text = paste0("Variacion del Dolar Blue"),
1694351065029:style = list(fontSize = '12px', fontWeight = 'bold', color = "black")) %>%
1694351065039:highcharter::hc_tooltip(
1694351065049:crosshairs = TRUE,
1694351065058:backgroundColor = "#F0F0F0",
1694351065068:shared = TRUE,
1694351065076:borderWidth = 5
1694351065085:) %>%
1694351065094:hc_title(
1694351065103:text = paste0('Dolar Blue Variacion Argentina'),
1694351065112:style = list(fontSize = '16px', fontWeight = 'bold', color = "black"))
1694351065121:})
1694351065156:output$timeserie <- renderHighchart({
1694351065171:highcharter::hchart(
1694351065180:dolar %>%
1694351065189:filter(Fecha >= as.Date(input$daterange3[1]), Fecha <= as.Date(input$daterange3[2])) %>%
1694351065197:select(Fecha, Promedio),
1694351065208:type = "line",
1694351065220:highcharter::hcaes(x = "Fecha", y = "Promedio"),
1694351065231:color = "#007bff",
1694351065243:name = "ver",
1694351065256:id = "trend",
1694351065269:showInLegend = TRUE) %>%
1694351065279:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Dolar Blue: ${point.y}") %>%
1694351065298:highcharter::hc_plotOptions(
1694351065309:line = list(
1694351065331:color = "blue",
1694351065343:marker = list(
1694351065353:fillColor = "white",
1694351065363:lineWidth = 2,
1694351065375:radius=1,
1694351065384:lineColor = NULL
1694351065394:)
1694351065405:)
1694351065415:) %>%
1694351065426:highcharter::hc_legend(enabled = FALSE) %>%
1694351065436:highcharter::hc_xAxis(
1694351065448:title = list(text = ""),
1694351065461:gridLineWidth = 0,
1694351065477:dateTimeLabelFormats = list(day = '%Y'),
1694351065497:type = "datetime",
1694351065514:reversed = FALSE,
1694351065530:labels = list(
1694351065545:style = list(color = "black", fontWeight = "bold")
1694351065561:)
1694351065574:) %>%
1694351065585:highcharter::hc_yAxis(
1694351065598:title = list(text = "Precio",
1694351065611:style = list(color = "black", fontWeight = "bold")),
1694351065623:gridLineWidth = 0,
1694351065634:reversed = FALSE,
1694351065645:labels = list(
1694351065657:style = list(color = "black", fontWeight = "bold")
1694351065671:)
1694351065682:) %>%
1694351065702:highcharter::hc_caption(
1694351065713:text = paste0("Serie Temporal del Dolar Paralelo."),
1694351065724:style = list(fontSize = '12px', fontWeight = 'bold', color = "black")) %>%
1694351065737:highcharter::hc_tooltip(
1694351065749:crosshairs = TRUE,
1694351065759:backgroundColor = "#F0F0F0",
1694351065772:shared = TRUE,
1694351065785:borderWidth = 5
1694351065800:) %>%
1694351065811:hc_title(
1694351065821:text = paste0('Dolar Paralelo Argentina'),
1694351065830:style = list(fontSize = '16px', fontWeight = 'bold', color = "black"))
1694351065838:})
1694351065863:output$barplot_mepvsoficial <- renderHighchart({
1694351065880:highchart() %>%
1694351065891:hc_chart(type = "column") %>%
1694351065903:hc_title(text = "Brecha Dolar Mep vs Oficial") %>%
1694351065915:hc_xAxis(categories = mepvsoficial$Fecha) %>%
1694351065927:hc_yAxis(title = list(text = "Brecha")) %>%
1694351065939:hc_add_series(name = "brecha",
1694351065950:data = mepvsoficial$brecha,
1694351065963:color = "#007bff") %>%
1694351065977:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Brecha: % {point.y}") %>%
1694351065992:highcharter::hc_legend(enabled = FALSE) %>%
1694351066005:highcharter::hc_xAxis(
1694351066017:title = list(text = ""),
1694351066030:reversed = FALSE,
1694351066042:labels = list(
1694351066053:style = list(color = "black", fontWeight = "bold")
1694351066064:)
1694351066075:) %>%
1694351066087:highcharter::hc_yAxis(
1694351066100:title = list(text = "% Brecha",
1694351066112:style = list(color = "black", fontWeight = "bold")),
1694351066123:gridLineWidth = 0,
1694351066134:reversed = FALSE,
1694351066145:labels = list(
1694351066157:style = list(color = "black", fontWeight = "bold")
1694351066168:)
1694351066182:) %>%
1694351066209:highcharter::hc_caption(
1694351066221:text = paste0("Brecha Mep vs Oficial."),
1694351066234:style = list(fontSize = '12px', fontWeight = 'bold', color = "black")) %>%
1694351066245:highcharter::hc_tooltip(
1694351066257:crosshairs = TRUE,
1694351066269:backgroundColor = "#F0F0F0",
1694351066280:shared = TRUE,
1694351066293:borderWidth = 5
1694351066304:) %>%
1694351066316:hc_title(
1694351066327:text = paste0('Brecha Cambiaria.'),
1694351066339:style = list(fontSize = '16px', fontWeight = 'bold', color = "black"))
1694351066365:})
1694351066396:output$barplot_bluevsoficial <- renderHighchart({
1694351066418:highchart() %>%
1694351066431:hc_chart(type = "column") %>%
1694351066443:hc_title(text = "Brecha Dolar Blue vs Oficial") %>%
1694351066455:hc_xAxis(categories = bluevsoficial$Fecha) %>%
1694351066468:hc_yAxis(title = list(text = "Brecha")) %>%
1694351066479:hc_add_series(name = "brecha",
1694351066490:data = bluevsoficial$brecha,
1694351066505:color = "#007bff") %>%
1694351066523:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Brecha: % {point.y}") %>%
1694351066539:highcharter::hc_legend(enabled = FALSE) %>%
1694351066555:highcharter::hc_xAxis(
1694351066572:title = list(text = ""),
1694351066587:reversed = FALSE,
1694351066603:labels = list(
1694351066617:style = list(color = "black", fontWeight = "bold")
1694351066635:)
1694351066648:) %>%
1694351066662:highcharter::hc_yAxis(
1694351066674:title = list(text = "% Brecha",
1694351066696:style = list(color = "black", fontWeight = "bold")),
1694351066706:gridLineWidth = 0,
1694351066717:reversed = FALSE,
1694351066728:labels = list(
1694351066739:style = list(color = "black", fontWeight = "bold")
1694351066749:)
1694351066759:) %>%
1694351066776:highcharter::hc_caption(
1694351066786:text = paste0("Brecha Blue vs Oficial."),
1694351066797:style = list(fontSize = '12px', fontWeight = 'bold', color = "black")) %>%
1694351066808:highcharter::hc_tooltip(
1694351066820:crosshairs = TRUE,
1694351066830:backgroundColor = "#F0F0F0",
1694351066840:shared = TRUE,
1694351066851:borderWidth = 5
1694351066862:) %>%
1694351066872:hc_title(
1694351066883:text = paste0('Brecha Cambiaria.'),
1694351066894:style = list(fontSize = '16px', fontWeight = 'bold', color = "black"))
1694351066922:})
1694351066948:output$barplot_bluevsmep <- renderHighchart({
1694351066966:highchart() %>%
1694351066976:hc_chart(type = "column") %>%
1694351066986:hc_title(text = "Brecha Dolar Blue vs Mep") %>%
1694351066997:hc_xAxis(categories = bluevsmep$Fecha) %>%
1694351067007:hc_yAxis(title = list(text = "Brecha")) %>%
1694351067020:hc_add_series(name = "brecha",
1694351067035:data = bluevsmep$brecha,
1694351067047:color = "#007bff") %>%
1694351067061:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Brecha: % {point.y}") %>%
1694351067073:highcharter::hc_legend(enabled = FALSE) %>%
1694351067085:highcharter::hc_xAxis(
1694351067100:title = list(text = ""),
1694351067112:reversed = FALSE,
1694351067124:labels = list(
1694351067138:style = list(color = "black", fontWeight = "bold")
1694351067151:)
1694351067163:) %>%
1694351067174:highcharter::hc_yAxis(
1694351067185:title = list(text = "% Brecha",
1694351067196:style = list(color = "black", fontWeight = "bold")),
1694351067206:gridLineWidth = 0,
1694351067218:reversed = FALSE,
1694351067228:labels = list(
1694351067238:style = list(color = "black", fontWeight = "bold")
1694351067250:)
1694351067260:) %>%
1694351067278:highcharter::hc_caption(
1694351067288:text = paste0("Brecha Blue vs Mep"),
1694351067298:style = list(fontSize = '12px', fontWeight = 'bold', color = "black")) %>%
1694351067309:highcharter::hc_tooltip(
1694351067319:crosshairs = TRUE,
1694351067330:backgroundColor = "#F0F0F0",
1694351067340:shared = TRUE,
1694351067350:borderWidth = 5
1694351067360:) %>%
1694351067371:hc_title(
1694351067383:text = paste0('Brecha Cambiaria.'),
1694351067393:style = list(fontSize = '16px', fontWeight = 'bold', color = "black"))
1694351067419:})
1694351067477:output$valuebox_1 <- renderbs4ValueBox({
1694351067497:bs4ValueBox(
1694351067507:value = "",
1694351067518:subtitle = HTML(
1694351067530:"Blue: $", as.character(dolarbluecierre),"<br>",
1694351067545:"Mep: $", as.character(dolarmepcierre),"<br>",
1694351067559:"Oficial: $", as.character(dolaroficialcierre)),
1694351067576:icon = icon("dollar-sign"),
1694351067590:color = "teal",
1694351067605:width = 3,
1694351067618:footer = div(paste0("Precios al ",today))
1694351067629:)
1694351067641:})
1694351067660:output$valuebox_3 <- renderbs4ValueBox({
1694351067678:bs4ValueBox(
1694351067689:value = paste0(
1694351067700:as.character(
1694351067711:get_dolar_interanual_input(
1694351067722:dolar, input$daterange3[1], input$daterange3[2]
1694351067732:)
1694351067742:), " %"),
1694351067753:subtitle = paste0("Variacion % Dolar Blue"),
1694351067764:icon = icon("info"),
1694351067774:color = "teal",
1694351067787:width = 3,
1694351067798:footer = div(
1694351067809:paste0(
1694351067820:"De: ", input$daterange3[1],
1694351067831:" a: ",input$daterange3[2]
1694351067842:)
1694351067851:)
1694351067861:)
1694351067879:})
1694351067902:output$valuebox_2 <- renderbs4ValueBox({
1694351067920:bs4ValueBox(
1694351067930:value = "",
1694351067942:subtitle = HTML(
1694351067952:"Blue: ", as.character(rv$var_dolar_blue)," %<br>",
1694351067963:"Mep: ", as.character(rv$var_dolar_mep)," %<br>",
1694351067974:"Oficial: ", as.character(rv$var_dolar_oficial)," %"),
1694351067984:icon = icon("coins"),
1694351067994:color = "teal",
1694351068002:width = 3,
1694351068011:footer = div(paste0("Variacion % Ultimos ", as.character(rv$dias_variacion) ," dias"))
1694351068021:)
1694351068032:})
1694351068078:output$valuebox_brechas_1 <- renderbs4ValueBox({
1694351068089:bs4ValueBox(
1694351068098:value = paste0(
1694351068107:as.character(
1694351068118:bluevsmep$brecha[nrow(bluevsmep)]
1694351068128:), " %"),
1694351068139:subtitle = paste0("Brecha Blue vs Mep"),
1694351068150:icon = icon(info_bluevsmep[2]),
1694351068160:color = info_bluevsmep[1],
1694351068171:width = 3,
1694351068181:footer = div(
1694351068198:paste0(
1694351068225:max(bluevsmep$Fecha)
1694351068242:)
1694351068256:)
1694351068268:)
1694351068280:})
1694351068300:output$valuebox_brechas_2 <- renderbs4ValueBox({
1694351068311:bs4ValueBox(
1694351068325:value = paste0(
1694351068335:as.character(
1694351068348:mepvsoficial$brecha[nrow(mepvsoficial)]
1694351068360:), " %"),
1694351068371:subtitle = paste0("Brecha Mep vs Oficial"),
1694351068382:icon = icon(info_mepvsoficial[2]),
1694351068400:color = info_mepvsoficial[1],
1694351068413:width = 3,
1694351068425:footer = div(
1694351068437:paste0(
1694351068450:max(mepvsoficial$Fecha)
1694351068462:)
1694351068473:)
1694351068485:)
1694351068498:})
1694351068522:output$valuebox_brechas_3 <- renderbs4ValueBox({
1694351068533:bs4ValueBox(
1694351068544:value = paste0(
1694351068557:as.character(
1694351068573:bluevsoficial$brecha[nrow(bluevsoficial)]
1694351068594:), " %"),
1694351068611:subtitle = paste0("Brecha Blue vs Oficial"),
1694351068630:icon = icon(info_bluevsoficial[2]),
1694351068646:color = info_bluevsoficial[1],
1694351068662:width = 3,
1694351068678:footer = div(
1694351068694:paste0(
1694351068708:max(bluevsoficial$Fecha)
1694351068721:)
1694351068734:)
1694351068748:)
1694351068762:})
1694351068792:}
1694351068813:shinyApp(ui = ui, server = server)
